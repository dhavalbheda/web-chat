[{"D:\\Work\\web-chat\\src\\index.js":"1","D:\\Work\\web-chat\\src\\App.js":"2","D:\\Work\\web-chat\\src\\Redux\\store.js":"3","D:\\Work\\web-chat\\src\\Redux\\rootReducer.js":"4","D:\\Work\\web-chat\\src\\Redux\\User\\UserActions.js":"5","D:\\Work\\web-chat\\src\\Components\\Layout\\PrivateRoute.js":"6","D:\\Work\\web-chat\\src\\Components\\SignInComponent\\SignIn.js":"7","D:\\Work\\web-chat\\src\\Components\\SignUpComponent\\SignUp.js":"8","D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Chat.js":"9","D:\\Work\\web-chat\\src\\Redux\\User\\ActionType.js":"10","D:\\Work\\web-chat\\src\\Redux\\User\\UserReducer.js":"11","D:\\Work\\web-chat\\src\\Components\\Layout\\Alert.js":"12","D:\\Work\\web-chat\\src\\config\\firebaseConfig.js":"13","D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatReducer.js":"14","D:\\Work\\web-chat\\src\\Components\\Header\\Header.js":"15","D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatActions.js":"16","D:\\Work\\web-chat\\src\\Redux\\Chat\\ActionType.js":"17"},{"size":357,"mtime":1611565731858,"results":"18","hashOfConfig":"19"},{"size":893,"mtime":1611565731846,"results":"20","hashOfConfig":"19"},{"size":300,"mtime":1611565731857,"results":"21","hashOfConfig":"19"},{"size":255,"mtime":1611565731857,"results":"22","hashOfConfig":"19"},{"size":6306,"mtime":1611565731857,"results":"23","hashOfConfig":"19"},{"size":475,"mtime":1611565731848,"results":"24","hashOfConfig":"19"},{"size":3586,"mtime":1611565731848,"results":"25","hashOfConfig":"19"},{"size":6202,"mtime":1611565731849,"results":"26","hashOfConfig":"19"},{"size":3985,"mtime":1611741904729,"results":"27","hashOfConfig":"19"},{"size":290,"mtime":1611565731856,"results":"28","hashOfConfig":"19"},{"size":1245,"mtime":1611565731857,"results":"29","hashOfConfig":"19"},{"size":322,"mtime":1611565731848,"results":"30","hashOfConfig":"19"},{"size":496,"mtime":1611565731857,"results":"31","hashOfConfig":"19"},{"size":1531,"mtime":1611732030023,"results":"32","hashOfConfig":"19"},{"size":1046,"mtime":1611739113870,"results":"33","hashOfConfig":"19"},{"size":3022,"mtime":1611741566980,"results":"34","hashOfConfig":"19"},{"size":388,"mtime":1611731937241,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mupdy9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\web-chat\\src\\index.js",[],["73","74"],"D:\\Work\\web-chat\\src\\App.js",["75"],"import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\n\r\nimport { fetchCurrentUserDetail } from './Redux/User/UserActions';\r\n\r\n\r\n\r\nconst App = () =>  {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","D:\\Work\\web-chat\\src\\Redux\\store.js",[],"D:\\Work\\web-chat\\src\\Redux\\rootReducer.js",[],"D:\\Work\\web-chat\\src\\Redux\\User\\UserActions.js",[],"D:\\Work\\web-chat\\src\\Components\\Layout\\PrivateRoute.js",[],"D:\\Work\\web-chat\\src\\Components\\SignInComponent\\SignIn.js",[],"D:\\Work\\web-chat\\src\\Components\\SignUpComponent\\SignUp.js",[],"D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Chat.js",["76","77"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllFriends, getConversation, saveMessage } from '../../Redux/Chat/ChatActions';\r\nimport Header from '../Header/Header'\r\nimport './style.css';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  let unsubsribe;\r\n\r\n  useEffect(() => {\r\n      unsubsribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => unsubsribe.then(f => f()).catch(error => console.log(error));\r\n  }, []);\r\n  \r\n  const selectFriend = (friend) => {\r\n    setStartChat(true);\r\n    setSelectedFriend(friend);    \r\n    dispatch(getConversation({\r\n      sender: user.uid,\r\n      receiver: friend.uid}));\r\n    }\r\n\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    dispatch(saveMessage(data));\r\n    dispatch(getConversation({sender: user.uid, receiver: selectedFriend.uid}));\r\n  }\r\n  return(\r\n        <Fragment>\r\n          <Header/>\r\n          <section className=\"container-body\">\r\n            <div className=\"listOfUsers\">\r\n              {friends.length > 0 && <LoadFriends selectFriend={selectFriend} friends={friends} />}\r\n            </div>\r\n            <div className=\"chatArea\">\r\n                <div className=\"chatHeader\"> \r\n                  {startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}\r\n                </div>\r\n                <div className=\"messageSections\">\r\n                    {\r\n                      startChat && \r\n                      conversation.map((item, key) => {\r\n                        return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n                        ? <div key={key} style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n                                <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message}</p>\r\n                              </div>\r\n                        : <Fragment key={key}></Fragment>\r\n                      })\r\n                    }\r\n                </div>\r\n                <div className=\"chatControls\">\r\n                  {\r\n                    startChat && <Fragment>\r\n                        <textarea\r\n                            placeholder = 'Enter Text...'\r\n                            value = {text}\r\n                            onChange = {e => setText(e.target.value)}></textarea>\r\n                      <button onClick={sendMessage}>Send</button>\r\n                    </Fragment>\r\n                  }\r\n                    \r\n                </div>\r\n              </div>\r\n          </section>\r\n        </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend}) => {\r\n  return friends.map((friend, index) => \r\n    <div key={index} className=\"displayName\" onClick = {() => selectFriend(friend)}>\r\n      <div className=\"displayPic\">\r\n          <img src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n          <span style={{fontWeight: 500}}>{friend.firstName + \" \" + friend.lastName}</span>\r\n          <span>{friend.isActive ? 'Active' : 'offline'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Chat;\r\n","D:\\Work\\web-chat\\src\\Redux\\User\\ActionType.js",[],"D:\\Work\\web-chat\\src\\Redux\\User\\UserReducer.js",[],"D:\\Work\\web-chat\\src\\Components\\Layout\\Alert.js",[],"D:\\Work\\web-chat\\src\\config\\firebaseConfig.js",[],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatReducer.js",[],"D:\\Work\\web-chat\\src\\Components\\Header\\Header.js",[],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatActions.js",[],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ActionType.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":18,"column":6,"nodeType":"84","endLine":18,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":23,"column":20,"nodeType":"87","endLine":25,"endColumn":42},{"ruleId":"82","severity":1,"message":"88","line":30,"column":6,"nodeType":"84","endLine":30,"endColumn":8,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["92"],"Assignments to the 'unsubsribe' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'unsubsribe'. Either include it or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [dispatch]",{"range":"98","text":"99"},"Update the dependencies array to be: [unsubsribe]",{"range":"100","text":"101"},[597,599],"[dispatch]",[1028,1030],"[unsubsribe]"]