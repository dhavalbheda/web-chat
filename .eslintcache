[{"D:\\Work\\web-chat\\src\\index.js":"1","D:\\Work\\web-chat\\src\\Redux\\store.js":"2","D:\\Work\\web-chat\\src\\App.js":"3","D:\\Work\\web-chat\\src\\Redux\\rootReducer.js":"4","D:\\Work\\web-chat\\src\\Redux\\User\\UserActions.js":"5","D:\\Work\\web-chat\\src\\Components\\Layout\\PrivateRoute.js":"6","D:\\Work\\web-chat\\src\\Components\\SignInComponent\\SignIn.js":"7","D:\\Work\\web-chat\\src\\Components\\SignUpComponent\\SignUp.js":"8","D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Chat.js":"9","D:\\Work\\web-chat\\src\\Redux\\User\\UserReducer.js":"10","D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatReducer.js":"11","D:\\Work\\web-chat\\src\\Redux\\User\\ActionType.js":"12","D:\\Work\\web-chat\\src\\config\\firebaseConfig.js":"13","D:\\Work\\web-chat\\src\\Components\\Layout\\Alert.js":"14","D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatActions.js":"15","D:\\Work\\web-chat\\src\\Components\\Header\\Header.js":"16","D:\\Work\\web-chat\\src\\Redux\\Chat\\ActionType.js":"17","D:\\Work\\web-chat\\src\\Components\\ChatComponent\\ConversationComponent.js":"18","D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Sidebar.js":"19","D:\\Work\\web-chat\\src\\Redux\\Room\\RoomReducer.js":"20","D:\\Work\\web-chat\\src\\Redux\\Room\\ActionType.js":"21","D:\\Work\\web-chat\\src\\Components\\RoomComponent\\Room.js":"22","D:\\Work\\web-chat\\src\\Redux\\Room\\RoomAction.js":"23","D:\\Work\\web-chat\\src\\Components\\RoomComponent\\Sidebar.js":"24","D:\\Work\\web-chat\\src\\Components\\RoomComponent\\ConversationComponent.js":"25"},{"size":634,"mtime":1611818724664,"results":"26","hashOfConfig":"27"},{"size":300,"mtime":1611565731857,"results":"28","hashOfConfig":"27"},{"size":1040,"mtime":1613392302502,"results":"29","hashOfConfig":"27"},{"size":325,"mtime":1613134628570,"results":"30","hashOfConfig":"27"},{"size":6728,"mtime":1613465263043,"results":"31","hashOfConfig":"27"},{"size":476,"mtime":1613145010204,"results":"32","hashOfConfig":"27"},{"size":4153,"mtime":1613546789433,"results":"33","hashOfConfig":"27"},{"size":6275,"mtime":1613462340112,"results":"34","hashOfConfig":"27"},{"size":5474,"mtime":1613585159431,"results":"35","hashOfConfig":"27"},{"size":1407,"mtime":1611825054240,"results":"36","hashOfConfig":"27"},{"size":1863,"mtime":1612179191186,"results":"37","hashOfConfig":"27"},{"size":330,"mtime":1611824919073,"results":"38","hashOfConfig":"27"},{"size":572,"mtime":1611926286318,"results":"39","hashOfConfig":"27"},{"size":322,"mtime":1611565731848,"results":"40","hashOfConfig":"27"},{"size":5388,"mtime":1613465606455,"results":"41","hashOfConfig":"27"},{"size":1046,"mtime":1611739113870,"results":"42","hashOfConfig":"27"},{"size":447,"mtime":1612178222768,"results":"43","hashOfConfig":"27"},{"size":1414,"mtime":1613040081299,"results":"44","hashOfConfig":"27"},{"size":3271,"mtime":1613569430227,"results":"45","hashOfConfig":"27"},{"size":1957,"mtime":1613478923539,"results":"46","hashOfConfig":"27"},{"size":463,"mtime":1613140360361,"results":"47","hashOfConfig":"27"},{"size":5062,"mtime":1613569167212,"results":"48","hashOfConfig":"27"},{"size":2088,"mtime":1613396196726,"results":"49","hashOfConfig":"27"},{"size":2743,"mtime":1613544704462,"results":"50","hashOfConfig":"27"},{"size":1224,"mtime":1613565005162,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1visszv",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\Work\\web-chat\\src\\index.js",[],["106","107"],"D:\\Work\\web-chat\\src\\Redux\\store.js",[],"D:\\Work\\web-chat\\src\\App.js",[],"D:\\Work\\web-chat\\src\\Redux\\rootReducer.js",[],"D:\\Work\\web-chat\\src\\Redux\\User\\UserActions.js",[],"D:\\Work\\web-chat\\src\\Components\\Layout\\PrivateRoute.js",[],"D:\\Work\\web-chat\\src\\Components\\SignInComponent\\SignIn.js",[],"D:\\Work\\web-chat\\src\\Components\\SignUpComponent\\SignUp.js",[],"D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Chat.js",["108","109"],"import React, { Component, Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// User Define\r\nimport './../Utils/css/font-awesome.css';\r\nimport './style.css';\r\nimport { getAllFriends, getConversation, removeLister, saveMessage } from '../../Redux/Chat/ChatActions';\r\nimport ConversationComponent from './ConversationComponent';\r\nimport Sidebar from './Sidebar';\r\nimport chatImage from '../Utils/images/chat-image.png'\r\nimport sendIcon from '../Utils/images/send-icon.png';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  \r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const [emojiPickerClick, setEmojiPickerClick] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n      dispatch(getAllFriends(user.uid))\r\n  }, [dispatch,user.uid])\r\n\r\n  useEffect(() => {\r\n    return () => removeLister(user.uid, selectedFriend.uid);\r\n  }, [selectedFriend, user.uid]);\r\n  \r\n\r\n   // Friend Click Listener\r\n  const selectFriend = (friend) => {\r\n    if(selectedFriend && selectedFriend.uid === friend.uid)\r\n      return;\r\n    setStartChat(true);\r\n    setEmojiPickerClick(false);\r\n    setText('');\r\n    setSelectedFriend(friend);  \r\n    dispatch(getConversation({\r\n        sender: user.uid,\r\n        receiver: friend.uid}))\r\n  }\r\n\r\n  // Message Send Button\r\n  const sendMessage = () => {\r\n    if(text === '')\r\n      return;\r\n    setText('');\r\n    const data = {\r\n      uuid: uuidv4(),\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    saveMessage(data);\r\n  }\r\n\r\n  // Emoji Button Click Listener\r\n  const onEmojiClick = (event, {emoji}) => {\r\n    setText(text +  emoji);\r\n  };\r\n\r\n  //Body Click \r\n  const containerBodyClick = () => {\r\n    if(window.innerWidth < 600) {\r\n      const bar = document.getElementsByClassName('navigation')[0];\r\n      if(bar.offsetWidth > 55) {\r\n          bar.style.width = \"55px\";\r\n          document.getElementsByClassName('bar-area')[0].style.width = \"55px\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return(\r\n        <Fragment>\r\n        <div className=\"main-container\">\r\n            {/* <!-- Sidebar --> */}\r\n          <Sidebar\r\n                uid={user.uid}\r\n                selectFriend={selectFriend}\r\n                friends={friends}\r\n                selectedFriend={selectedFriend} />\r\n\r\n            {/* <!-- Chat Body --> */}\r\n           \r\n              <div className=\"container-body\" onClick={containerBodyClick}>\r\n\r\n                {/* <!-- Chat Header --> */}\r\n              {startChat ?  \r\n              <Fragment>\r\n                <div className=\"friend-name\">\r\n                    <span>{startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}</span>\r\n                </div>\r\n                \r\n                {/* Message Area */}\r\n                <ScrollToBottom className=\"message-section\">\r\n                  <ConversationComponent \r\n                                        conversation = {conversation}\r\n                                        selectedFriend = {selectedFriend} \r\n                                        user = {user}/>\r\n                </ScrollToBottom>\r\n\r\n                {/* <!-- Control Area --> */}\r\n                <ControlComponent \r\n                                text={text} \r\n                                setText={setText}\r\n                                setEmojiPickerClick={setEmojiPickerClick}\r\n                                sendMessage={sendMessage}\r\n                                emojiPickerClick={emojiPickerClick}\r\n                                onEmojiClick={onEmojiClick} />\r\n            </Fragment>\r\n            : //Brand Name\r\n              <div className=\"chat-image-div\">\r\n                <img className=\"temp\" style={{width:'100%'}} src={chatImage} alt=\"\" />\r\n              </div>\r\n            }\r\n            </div> \r\n\r\n        </div>\r\n    </Fragment>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst ControlComponent = ({text, setText, setEmojiPickerClick, sendMessage, emojiPickerClick, onEmojiClick}) => {\r\n\r\n  return <Fragment>\r\n    <div className=\"chat-control\">\r\n      <div className=\"control\">\r\n          <textarea\r\n                  placeholder = 'Enter Text...'\r\n                  value = {text}\r\n                  \r\n                  onChange = {e => {\r\n                      console.log('ca2');\r\n                      // setText(e.target.value)\r\n                  }}\r\n                  onKeyPress = {e => {\r\n                    return false;\r\n                    console.log('ca1')\r\n                    // setText(e.target.value)\r\n                \r\n                  }}\r\n                  >\r\n\r\n          </textarea>\r\n          <span className=\"smile-icon\" onClick={e=> setEmojiPickerClick(!emojiPickerClick)}><i className=\"fas fa-smile\"></i></span>\r\n          <span className=\"send-icon\" onClick={sendMessage}>\r\n            <img style={{width: '30px'}} src={sendIcon} alt=\"\" />\r\n          </span>\r\n      </div>\r\n      {emojiPickerClick && <Picker onEmojiClick={onEmojiClick} />}\r\n    </div>\r\n  </Fragment>\r\n}\r\nexport default Chat;","D:\\Work\\web-chat\\src\\Redux\\User\\UserReducer.js",[],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatReducer.js",[],"D:\\Work\\web-chat\\src\\Redux\\User\\ActionType.js",[],"D:\\Work\\web-chat\\src\\config\\firebaseConfig.js",[],"D:\\Work\\web-chat\\src\\Components\\Layout\\Alert.js",[],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ChatActions.js",[],"D:\\Work\\web-chat\\src\\Components\\Header\\Header.js",[],["110","111"],"D:\\Work\\web-chat\\src\\Redux\\Chat\\ActionType.js",[],"D:\\Work\\web-chat\\src\\Components\\ChatComponent\\ConversationComponent.js",[],"D:\\Work\\web-chat\\src\\Components\\ChatComponent\\Sidebar.js",["112"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport brandIcon from '../Utils/images/brand.png' ;\r\nimport userIcon from '../Utils/images/user-icon.png';\r\n\r\nconst Sidebar = ({uid, selectFriend, friends, selectedFriend}) => {\r\n    \r\n    // Bar Click Listener\r\n    const barClick = () => {\r\n        const bar = document.getElementsByClassName('navigation')[0];\r\n        if(window.innerWidth < 600) {\r\n          if(bar.offsetWidth < 300) {\r\n            bar.style.width = \"300px\";\r\n            document.getElementsByClassName('bar-area')[0].style.width = \"300px\";\r\n          } else {\r\n              bar.style.width = \"55px\";\r\n              document.getElementsByClassName('bar-area')[0].style.width = \"55px\";\r\n          }\r\n        }\r\n    }\r\n\r\n    return <Fragment>\r\n        <div className=\"navigation\">\r\n            <div className=\"bar-area\">\r\n                <div className=\"brand-panel\" onClick={barClick}>\r\n                    <img className=\"brand-icon\" alt=\"\" src={brandIcon} />\r\n                </div>\r\n                <div className=\"chat-option\" style={{borderBottom:'2px solid green', borderTop: '8px solid green', background: '#00800036'}}>\r\n                  <span className=\"icon icon-private\"><i class=\"fas fa-user\"></i></span>\r\n                  <span className=\"title title-private\">Private</span>\r\n                </div> \r\n                <Link to='/group' className=\"selected-option\">\r\n                  <div className=\"chat-option\" style={{borderBottom:'8px solid green'}}>\r\n                    <span className=\"icon\"><i class=\"fas fa-users\"></i></span>\r\n                    <span className=\"title\">Group</span>\r\n                  </div>\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {friends.length && <LoadFriends\r\n                                            uid={uid}\r\n                                            selectFriend={selectFriend}\r\n                                            friends={friends}\r\n                                            selectedFriend={selectedFriend} />}\r\n            </ul>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend, uid, selectedFriend}) => {\r\n    // Check Pending Message \r\n    const checkUnseen = (friend) => {\r\n     \r\n      if(friend.pending) {\r\n        let flg = friend.pending.filter(item => item.receiver === uid);\r\n        if(flg.length) {\r\n          return flg[0].totalUnseen;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    return friends.map((friend, index) => \r\n          {\r\n            let pending =  checkUnseen(friend);\r\n            return(\r\n            <li key={index}>\r\n              <div style={selectedFriend.uid === friend.uid ? {background: '#0a762233'} : {}} key={index} onClick = {() => selectFriend(friend)}>\r\n                  {pending && <span className=\"pending-message\">{pending}</span>}\r\n                  <span className=\"icon\">{friend.firstName[0].toUpperCase() + \"\" + friend.lastName[0].toUpperCase()}</span>\r\n                  <span className=\"title\">{friend.firstName + \" \" + friend.lastName}</span>\r\n              </div>\r\n            </li>\r\n            );\r\n          }\r\n    )\r\n  }\r\n\r\nexport default Sidebar;","D:\\Work\\web-chat\\src\\Redux\\Room\\RoomReducer.js",[],"D:\\Work\\web-chat\\src\\Redux\\Room\\ActionType.js",[],"D:\\Work\\web-chat\\src\\Components\\RoomComponent\\Room.js",[],"D:\\Work\\web-chat\\src\\Redux\\Room\\RoomAction.js",[],"D:\\Work\\web-chat\\src\\Components\\RoomComponent\\Sidebar.js",[],"D:\\Work\\web-chat\\src\\Components\\RoomComponent\\ConversationComponent.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":151,"column":21,"nodeType":"123","messageId":"124","endLine":151,"endColumn":39},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"117","severity":1,"message":"127","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["128"],["129"],"'userIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]