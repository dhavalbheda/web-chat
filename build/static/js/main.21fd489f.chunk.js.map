{"version":3,"sources":["Redux/Chat/ActionType.js","config/firebaseConfig.js","Redux/Chat/ChatActions.js","Components/ChatComponent1/Chat.js","Components/Layout/PrivateRoute.js","Redux/User/ActionType.js","Redux/User/UserActions.js","Components/Layout/Alert.js","Components/SignInComponent/SignIn.js","Components/SignUpComponent/SignUp.js","App.js","Redux/User/UserReducer.js","Redux/Chat/ChatReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["CHAT_FETCH_REQUEST","CHAT_FETCH_SUCCESS","CHAT_FETCH_ERROR","CHAT_SET_ALERT","CHAT_REMOVE_ALERT","REQUEST_CONVERSATION","SET_CONVERSATION","UPDATE_CONVERSATION","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","rdb","database","arrayUnion","FieldValue","arrayRemove","requestConversation","data","type","payload","setConversation","updateConversation","saveMessage","a","uuid","sender","receiver","message","totalUnseen","ref","child","push","set","isSeen","createdAt","ServerValue","TIMESTAMP","collection","doc","update","pendding","console","log","LoadFriends","friends","selectFriend","selectedFriend","uid","map","friend","index","style","background","onClick","className","src","alt","firstName","lastName","ChatComponent","conversation","user","setTotalUnseen","total","sort","b","item","key","undefined","Date","toLocaleString","day","month","toLocaleTimeString","timeStyle","textAlign","Chat","props","useSelector","state","User","useState","startChat","setStartChat","setSelectedFriend","text","setText","emojiPickerClick","setEmojiPickerClick","dispatch","useDispatch","useEffect","unsubscribe","onSnapshot","querySnapshot","forEach","then","unsubscribeMehod","catch","error","off","bar","document","getElementsByClassName","offsetWidth","width","length","on","snap","val","getConversation","placeholder","value","onChange","e","target","uuidv4","onEmojiClick","event","emoji","PrivateRoute","Component","path","rest","authenticated","exact","render","to","USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","SET_ALERT","REMOVE_ALERT","TAB_CHANGE","auth","fetchRequest","fetchSuccess","fetchError","setAlert","removeAlert","registerUserWithEmail","createUserWithEmailAndPassword","email","password","updateCurrentUserDetail","setTimeout","currentUser","updateProfile","isActive","localStorage","setItem","Alert","alert","zIndex","role","SignIn","userAlert","setEmail","setPassword","onsubmit","preventDefault","signInWithEmailAndPassword","htmlFor","id","SignUp","setFirstName","setLastName","confirmPassword","setConfirmPassword","signUpUser","App","onAuthStateChanged","userRef","get","exists","height","component","initialState","currentTab","loadding","UserReducer","action","chatAlert","ChatReducer","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","BrowserUnload","window","addEventListener","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21fd489f.chunk.js","sourcesContent":["export const CHAT_FETCH_REQUEST = 'CHAT_FETCH_REQUEST';\r\nexport const CHAT_FETCH_SUCCESS = 'CHAT_FETCH_SUCCESS';\r\nexport const CHAT_FETCH_ERROR = 'CHAT_FETCH_ERROR';\r\nexport const CHAT_SET_ALERT = 'CHAT_SET_ALERT';\r\nexport const CHAT_REMOVE_ALERT = 'CHAT_REMOVE_ALERT';\r\nexport const REQUEST_CONVERSATION = 'REQUEST_CONVERSATION'; \r\nexport const SET_CONVERSATION = 'SET_CONVERSATION';\r\nexport const UPDATE_CONVERSATION = 'UPDATE_CONVERSATION';\r\n\r\n","\r\nimport firebase from 'firebase';\r\n\r\n// Configuration of Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB3mUGEeVTQn7hbmoxUNncowRjwD-5y2TI\",\r\n  authDomain: \"digital-jalebi-ac363.firebaseapp.com\",\r\n  databaseURL: \"https://digital-jalebi-ac363-default-rtdb.firebaseio.com\",\r\n  projectId: \"digital-jalebi-ac363\",\r\n  storageBucket: \"digital-jalebi-ac363.appspot.com\",\r\n  messagingSenderId: \"105427663157\",\r\n  appId: \"1:105427663157:web:3e564360c7852fb4abb47c\",\r\n  measurementId: \"G-M2DJG8HX1P\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION, UPDATE_CONVERSATION } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\n\r\nconst db = firebase.firestore();\r\nconst rdb = firebase.database();\r\nconst arrayUnion = firebase.firestore.FieldValue.arrayUnion;\r\nconst arrayRemove = firebase.firestore.FieldValue.arrayRemove;\r\n\r\n// =========> All The Action Types \r\n// Chat Request\r\nexport const chatRequest = () => {\r\n    return {\r\n        type: CHAT_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\n// Chat Success\r\nexport const chatSuccess = (data) => {\r\n    return {\r\n        type: CHAT_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Chat Error\r\nexport const chatError = (error=null) => {\r\n    return {\r\n        type: CHAT_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const requestConversation = (data = null) => \r\n{\r\n    return {\r\n        type: REQUEST_CONVERSATION,\r\n        payload: data\r\n    }\r\n}\r\nexport const setConversation = (data = null) => {\r\n    return {\r\n        type: SET_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const updateConversation = (data = null) => {\r\n    return {\r\n        type: UPDATE_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\n// Set Alert\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: CHAT_SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Remove Alert\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: CHAT_REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Get All Message\r\nexport const getAllFriends = (uid) => {\r\n    return async dispatch => {\r\n        const unsubscribe = db.collection('users').onSnapshot((querySnapshot) => {\r\n            const friends = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid)\r\n                    friends.push(doc.data());\r\n            })\r\n            dispatch(chatSuccess(friends));\r\n        })\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\n// Send Message\r\nexport const saveMessage = async({uuid, sender, receiver, message}, totalUnseen=0) => {\r\n    rdb.ref().child(sender + \"-\" + receiver).push().set({\r\n        uuid,\r\n        sender,\r\n        receiver,\r\n        message,\r\n        isSeen: false,\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP\r\n    })\r\n    db.collection('users').doc(sender).update({pendding: arrayUnion(receiver)});\r\n    console.log(totalUnseen);\r\n}\r\n\r\n// Get Conversation\r\nexport const getConversation = ({sender, receiver}) => {\r\n    return async dispatch => {\r\n        dispatch(requestConversation());\r\n        rdb.ref().child(sender + \"-\" + receiver).on('child_added', snap => {\r\n           dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(receiver + \"-\" + sender).on('child_added', snap => {\r\n            if(!snap.val().isSeen) {\r\n                rdb.ref().child(receiver + \"-\" + sender).child(snap.key).update({isSeen: true});\r\n                db.collection('users').doc(receiver).update({pendding: arrayRemove(sender)});\r\n            }\r\n            dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(sender + \"-\" + receiver).on('child_changed', snap => {\r\n            dispatch(updateConversation(snap.val()))\r\n        })\r\n    }  \r\n}\r\n\r\nexport const removeLister = (sender, receiver) => {\r\n    rdb.ref().child(sender + \"-\" + receiver).off('child_added');\r\n    rdb.ref().child(sender + \"-\" + receiver).off('child_changed');\r\n    rdb.ref().child(receiver + \"-\" + sender).off('child_added');\r\n}","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// User Define\r\nimport './../Utils/css/font-awesome.css';\r\nimport './style.css';\r\nimport { getAllFriends, getConversation, removeLister, saveMessage } from '../../Redux/Chat/ChatActions';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const [emojiPickerClick, setEmojiPickerClick] = useState(false);\r\n  const [totalUnseen, setTotalUnseen] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  let unsubscribe;\r\n  useEffect(() => {\r\n      unsubscribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => removeLister(user.uid, selectedFriend.uid);\r\n  }, [selectedFriend]);\r\n  \r\n\r\n   // Friend Click Listener\r\n  const selectFriend = (friend) => {\r\n    if(selectedFriend && selectedFriend.uid === friend.uid)\r\n      return;\r\n      console.log(friend.uid);\r\n    setStartChat(true);\r\n    setEmojiPickerClick(false);\r\n    setText('');\r\n    setSelectedFriend(friend);  \r\n    dispatch(getConversation({\r\n        sender: user.uid,\r\n        receiver: friend.uid}))\r\n  }\r\n\r\n  // Message Send Button\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      uuid: uuidv4(),\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    saveMessage(data, totalUnseen);\r\n  }\r\n\r\n  // Emoji Button Click Listener\r\n  const onEmojiClick = (event, {emoji}) => {\r\n    setText(text +  emoji);\r\n  };\r\n\r\n  // Bar Click Listener\r\n  const barClick = () => {\r\n    const bar = document.getElementsByClassName('navigation')[0];\r\n    if(bar.offsetWidth < 300) {\r\n      bar.style.width = \"300px\";\r\n    } else {\r\n      bar.style.width = \"55px\";\r\n    }\r\n  }\r\n\r\n  return(\r\n        <Fragment>\r\n        <div className=\"main-container\">\r\n            {/* <!-- Header --> */}\r\n            {/* <header className=\"header\">\r\n                <div className=\"logo\">\r\n                    <span>Digital</span>\r\n                </div>\r\n                <span>Dhaval Bheda</span>\r\n                <span className=\"logout\"><i class=\"fas fa-sign-out-alt\"></i></span>\r\n            </header> */}\r\n\r\n            {/* <!-- Sidebar --> */}\r\n            <div className=\"navigation\">\r\n                <div className=\"bar-area\">\r\n                    <span className=\"icon bar-icon\" onClick={barClick}><i className=\"fas fa-bars\"></i></span>\r\n                </div>\r\n                <ul>\r\n                    {friends.length > 0 && <LoadFriends uid={user.uid} selectFriend={selectFriend} friends={friends} selectedFriend={selectedFriend} />}\r\n                </ul>\r\n            </div>\r\n            \r\n            {/* <!-- Chat Body --> */}\r\n            <div className=\"container-body\">\r\n                {/* <!-- Chat Header --> */}\r\n                <div className=\"friend-name\">\r\n                    <span>{startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}</span>\r\n                </div>\r\n                \r\n                {/* Message Area */}\r\n                <ScrollToBottom className=\"message-section\">\r\n                    {\r\n                        startChat && <ChatComponent \r\n                                        conversation = {conversation}\r\n                                        selectedFriend = {selectedFriend} \r\n                                        user = {user}\r\n                                        totalUnseen = {totalUnseen} \r\n                                        setTotalUnseen={setTotalUnseen}  />\r\n                    }\r\n                </ScrollToBottom>\r\n                {/* <!-- Control Area --> */}\r\n                <div className=\"chat-control\">\r\n                    <div className=\"control\">\r\n                        <textarea\r\n                                placeholder = 'Enter Text...'\r\n                                value = {text}\r\n                                onChange = {e => {\r\n                                    setText(e.target.value)\r\n                                }}>\r\n                        </textarea>\r\n                        <span className=\"smile-icon\" onClick={e=> setEmojiPickerClick(!emojiPickerClick)}><i className=\"fas fa-smile\"></i></span>\r\n                        <span className=\"send-icon\" onClick={sendMessage}><i className=\"fas fa-paper-plane\"></i></span>\r\n                    </div>\r\n                {emojiPickerClick && <Picker onEmojiClick={onEmojiClick} />}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend, uid, selectedFriend}) => {\r\n  const addClass = (friend, uid) => {\r\n    if(friend.pendding) {\r\n      if(friend.pendding.includes(uid)) {\r\n        return 'displayPic pending'\r\n      } else {\r\n        return 'displayPic'\r\n      }\r\n    } else {\r\n      return 'displayPic'\r\n    }\r\n  }\r\n\r\n  return friends.map((friend, index) => \r\n    <li key={index}>\r\n        <div style={selectedFriend.uid === friend.uid ? {background: '#b1b1b1'} : {}} key={index} onClick = {() => selectFriend(friend)}>\r\n            <span className=\"icon\"><img className=\"icon\" src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" /></span>\r\n            <span className=\"title\">{friend.firstName + \" \" + friend.lastName}</span>\r\n            {/* <span>{friend.isActive ? 'Active' : 'offline'}</span> */}\r\n        </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst ChatComponent = ({conversation, selectedFriend, user, totalUnseen, setTotalUnseen}) => {\r\n  let total = 0;\r\n  const sortCoversation = (data) => {\r\n    data.sort((a, b) => a.createdAt - b.createdAt);\r\n  }\r\n\r\n  sortCoversation(conversation)\r\n  return conversation.map((item, key) => {\r\n       \r\n    // Date Time\r\n    let createdAt = undefined;\r\n    if(item.createdAt != null) {\r\n      let options = { day: 'numeric', month: 'short'};\r\n      createdAt = new Date(item.createdAt).toLocaleString('en', options);\r\n      createdAt += \" \" + new Date(item.createdAt).toLocaleTimeString([], {timeStyle: 'short'});\r\n    }\r\n    \r\n    // Count Total Unseen Message\r\n    if(!item.isSeen) {\r\n      total++;\r\n    }\r\n    setTotalUnseen(total);\r\n\r\n    return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n    ? <Fragment key={key}>\r\n        <div style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n            <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message}<br/>\r\n              <span className=\"message-time\">{ createdAt ? createdAt : '' }</span>\r\n              {item.receiver !== user.uid && <span className=\"message-status\">{item.isSeen ? <i className=\"far fa-eye\"></i> : <i className=\"far fa-eye-slash\"></i>}</span>}\r\n            </p>\r\n        </div>\r\n      </Fragment>\r\n    : <Fragment key={key}></Fragment>\r\n  })\r\n}\r\n\r\nexport default Chat;","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const { authenticated } = useSelector(state => state.User);\r\n\r\n    return <Fragment>\r\n        {!authenticated\r\n        ? (<Redirect to=\"/signin\" />)\r\n        : <Route exact {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const TAB_CHANGE = 'TAB_CHANGE'\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, SET_ALERT, REMOVE_ALERT, USER_LOG_OUT, TAB_CHANGE } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db =firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\n// =====================> All The Action Types \r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error=null) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const reqLogOut = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\nexport const setTabChange = (data) => {\r\n    return {\r\n        type: TAB_CHANGE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Register User\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            registerUserWithEmail(user, dispatch);\r\n        } \r\n    }\r\n}\r\n\r\n// Register User With Email\r\nconst registerUserWithEmail = (data, dispatch) => {\r\n    // Creating A User With Email And Password\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(user => {\r\n        updateCurrentUserDetail(user, data, dispatch);\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Upadate Current User Detail\r\nconst updateCurrentUserDetail = (user, data, dispatch) => {\r\n    const { firstName, lastName, email } = data;\r\n    const currentUser = auth.currentUser;\r\n    currentUser.updateProfile({ firstName, lastName,})\r\n    .then( () => {\r\n        // Save To The Database\r\n        db.collection('users').doc(user.user.uid).set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            uid: user.user.uid,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            localStorage.setItem('userId', user.user.uid);\r\n            dispatch(fetchSuccess({firstName, lastName, email, uid: user.user.uid}));\r\n            dispatch(setAlert({type:'success', message: \"User Registerd Successfull\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Fetch Current User Detail\r\nexport const fetchCurrentUserDetail = () => {\r\n    return dispatch => {\r\n        // Check If user is signedin or not\r\n        auth.onAuthStateChanged( async(user) => {\r\n            if (user) {\r\n                const userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                const doc = await userRef.get();\r\n                if (!doc.exists) {\r\n                    dispatch(setAlert({type:'danger', message: \"Your Account Terminated, So Please Register With New Email..\"}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                    dispatch(fetchError(''));\r\n                } else {\r\n                    const {firstName, lastName, email, uid} = doc.data();\r\n                    dispatch(fetchSuccess({firstName, lastName, email, uid}));\r\n                }\r\n            } else {\r\n                dispatch(setAlert({type:'warning', message: \"You Logged Out Please Login\"}));\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n                dispatch(fetchError(''));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Sign In Action\r\nexport const signInUser = (data) => {\r\n    return async dispatch => {\r\n        if(data.email === '' || data.password < 6) {\r\n            dispatch(setAlert({type:'warning', message: \"Email is required!\\n Password Must be more than 6 letter\"}));\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            auth.signInWithEmailAndPassword(data.email, data.password)\r\n            .then((user) => {\r\n                db.collection('users').doc(user.user.uid).update({\r\n                    isActive: true\r\n                })\r\n                .then(() => {\r\n                    localStorage.setItem('userId', user.user.uid);\r\n                    dispatch(setAlert({type:'success', message: 'Sign In Successfully'}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n                .catch(error => {\r\n                    dispatch(setAlert({type:'danger', message: error.message}))\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logoutUser = (uid) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest());\r\n        db.collection('users').doc(uid)\r\n        .update({isActive: false})\r\n        .then(() => {\r\n            auth.signOut()\r\n            .then(() => {\r\n                dispatch(reqLogOut());\r\n                dispatch(setAlert({type:'success', message: \"Logout Successfully\"}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })   \r\n        })\r\n        .catch(error => {\r\n            dispatch(setAlert({type:'danger', message: error.message}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const userTabChange = (uid, friendId) => {\r\n  return async dispatch => db.collection('users').doc(uid)\r\n        .update({currentTab: friendId})\r\n        .then(() => {\r\n            dispatch(setTabChange(friendId));\r\n        })\r\n}","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} style={{zIndex: 1}} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\nexport default Alert","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from './../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignIn Component\r\n **/\r\n\r\nconst SignIn = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signInUser({ email, password}));\r\n    }\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            id=\"staticEmail\" \r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />;\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputPassword\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                                <button className=\"btn btn-primary m-2\" onClick={e => onsubmit(e)}>Sign In</button>\r\n                                <NavLink to=\"/signup\" className=\"btn btn-primary m-2\">Sign Up</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { signUpUser } from '../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignUp Component\r\n **/\r\n\r\nconst SignUp = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n       dispatch(signUpUser({firstName, lastName, email, password}, confirmPassword));\r\n    }\r\n\r\n    return  <div className=\"container\">\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            {/* First Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">First Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => setFirstName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Last Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Last Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            value={lastName}\r\n                                            onChange={(e) => setLastName(e.target.value)}  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Email */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Confirm Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Confirm Password\"\r\n                                            value={confirmPassword}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                            <button className=\"btn btn-primary m-2\" onClick={(e) => onsubmit(e)}>Sign Up</button>\r\n                                <NavLink to=\"/signin\" className=\"btn btn-primary m-2\">I Have Account</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignUp","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent1/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\nimport { fetchCurrentUserDetail } from './Redux/User/UserActions';\r\n\r\nconst App = () =>  {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{height:'100%'}}>\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, SET_ALERT, REMOVE_ALERT, TAB_CHANGE } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    authenticated:false,\r\n    currentTab: null,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                authenticated: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                authenticated: false\r\n            }\r\n        case TAB_CHANGE:\r\n            return {\r\n                ...state,\r\n                currentTab: payload\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer;","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION, UPDATE_CONVERSATION } from './ActionType'\r\n\r\nconst initialState = {\r\n    friends:[],\r\n    conversation: [],\r\n    loadding: false,\r\n    chatAlert: null\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case CHAT_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case CHAT_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: payload,\r\n                loadding: false,\r\n            }\r\n        case CHAT_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                friends:[],\r\n                loadding: false,\r\n            }\r\n        case REQUEST_CONVERSATION: \r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n                conversation: []\r\n            }\r\n        case SET_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversation: [...state.conversation, payload],\r\n                loadding: false\r\n            }\r\n        case UPDATE_CONVERSATION:\r\n            let conversation = state.conversation.filter(item => item.uuid !== payload.uuid);\r\n            return {\r\n                ...state,\r\n                conversation: [...conversation, payload],\r\n                loadding: false\r\n            }\r\n        case CHAT_SET_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: payload\r\n            }\r\n        case CHAT_REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default ChatReducer;","import { combineReducers } from 'redux'\r\n\r\nimport UserReducer from './User/UserReducer'\r\nimport ChatReducer from './Chat/ChatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Chat: ChatReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nclass BrowserUnload extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", function confirmExit()\r\n      {\r\n        return \"show warning\";\r\n      } );\r\n }\r\n render() {\r\n   return <div></div>\r\n }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n      <App />\r\n      <BrowserUnload/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}