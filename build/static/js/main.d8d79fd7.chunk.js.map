{"version":3,"sources":["Redux/Chat/ActionType.js","config/firebaseConfig.js","Redux/Chat/ChatActions.js","Redux/User/ActionType.js","Redux/User/UserActions.js","Components/Header/Header.js","Components/ChatComponent/Chat.js","Components/Layout/PrivateRoute.js","Components/Layout/Alert.js","Components/SignInComponent/SignIn.js","Components/SignUpComponent/SignUp.js","App.js","Redux/User/UserReducer.js","Redux/Chat/ChatReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["CHAT_FETCH_REQUEST","CHAT_FETCH_SUCCESS","CHAT_FETCH_ERROR","CHAT_SET_ALERT","CHAT_REMOVE_ALERT","SET_CONVERSATION","REQUEST_CONVERSATION","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","requestConversation","data","type","payload","setConversation","getConversation","sender","receiver","dispatch","a","console","log","collection","where","orderBy","onSnapshot","querySnapshot","conversations","forEach","doc","push","USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","SET_ALERT","REMOVE_ALERT","auth","fetchRequest","fetchSuccess","fetchError","error","setAlert","removeAlert","registerUserWithEmail","createUserWithEmailAndPassword","email","password","then","user","updateCurrentUserDetail","catch","message","setTimeout","firstName","lastName","currentUser","updateProfile","uid","set","isActive","createdAt","Date","localStorage","setItem","logoutUser","update","signOut","Header","props","useSelector","state","User","useDispatch","className","style","display","margin","color","fontWeight","to","onClick","LoadFriends","friends","selectFriend","map","friend","index","src","alt","flex","justifyContent","Chat","unsubsribe","conversation","useState","startChat","setStartChat","selectedFriend","setSelectedFriend","text","setText","useEffect","unsubscribe","unsubscribeMehod","f","length","item","key","textAlign","placeholder","value","onChange","e","target","add","isSeen","saveMessage","PrivateRoute","Component","path","rest","authenticated","exact","render","Alert","alert","zIndex","role","SignIn","userAlert","setEmail","setPassword","onsubmit","preventDefault","signInWithEmailAndPassword","htmlFor","id","SignUp","setFirstName","setLastName","confirmPassword","setConfirmPassword","signUpUser","App","onAuthStateChanged","userRef","get","exists","component","initialState","loadding","UserReducer","action","chatAlert","ChatReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8d79fd7.chunk.js","sourcesContent":["export const CHAT_FETCH_REQUEST = 'CHAT_FETCH_REQUEST';\r\nexport const CHAT_FETCH_SUCCESS = 'CHAT_FETCH_SUCCESS';\r\nexport const CHAT_FETCH_ERROR = 'CHAT_FETCH_ERROR';\r\nexport const CHAT_SET_ALERT = 'CHAT_SET_ALERT';\r\nexport const CHAT_REMOVE_ALERT = 'CHAT_REMOVE_ALERT';\r\nexport const SET_CONVERSATION = 'SET_CONVERSATION';\r\nexport const REQUEST_CONVERSATION = 'REQUEST_CONVERSATION'; \r\n\r\n","\r\nimport firebase from 'firebase';\r\n\r\n// Configuration of Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB3mUGEeVTQn7hbmoxUNncowRjwD-5y2TI\",\r\n  authDomain: \"digital-jalebi-ac363.firebaseapp.com\",\r\n  projectId: \"digital-jalebi-ac363\",\r\n  storageBucket: \"digital-jalebi-ac363.appspot.com\",\r\n  messagingSenderId: \"105427663157\",\r\n  appId: \"1:105427663157:web:3e564360c7852fb4abb47c\",\r\n  measurementId: \"G-M2DJG8HX1P\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db = firebase.firestore();\r\n\r\n// =========> All The Action Types \r\n// Chat Request\r\nexport const chatRequest = () => {\r\n    return {\r\n        type: CHAT_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\n// Chat Success\r\nexport const chatSuccess = (data) => {\r\n    return {\r\n        type: CHAT_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Chat Error\r\nexport const chatError = (error=null) => {\r\n    return {\r\n        type: CHAT_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const requestConversation = (data = null) => \r\n{\r\n    return {\r\n        type: REQUEST_CONVERSATION,\r\n        payload: data\r\n    }\r\n}\r\nexport const setConversation = (data = null) => {\r\n    return {\r\n        type: SET_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\n// Set Alert\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: CHAT_SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Remove Alert\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: CHAT_REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Get All Message\r\nexport const getAllFriends = (uid) => {\r\n    return async dispatch => {\r\n        const unsubscribe = db.collection('users').onSnapshot((querySnapshot) => {\r\n            const friends = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid)\r\n                    friends.push(doc.data());\r\n            })\r\n            dispatch(chatSuccess(friends));\r\n\r\n        })\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\n// Send Message\r\nexport const saveMessage = ({sender, receiver, message}) => {\r\n    return async dispatch => {\r\n        const conversion = db.collection('conversation');\r\n        conversion.add({\r\n            sender,\r\n            receiver,\r\n            message,\r\n            isSeen: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\n// Get Conversation\r\nexport const getConversation = ({sender, receiver}) => {\r\n    return async dispatch => {\r\n        console.log(receiver);\r\n        dispatch(requestConversation());\r\n        db.collection('conversation')\r\n        .where('sender', 'in', [sender, receiver])\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot(querySnapshot => {\r\n            const conversations = [];\r\n            querySnapshot.forEach(doc => {\r\n                if((doc.data().sender === sender && doc.data().receiver === receiver) || (doc.data().sender === receiver && doc.data().receiver === sender))\r\n                {\r\n                    conversations.push(doc.data())\r\n                }\r\n            });\r\n            dispatch(setConversation(conversations));\r\n        })\r\n    }   \r\n}","export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, SET_ALERT, REMOVE_ALERT, USER_LOG_OUT } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db =firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\n// =====================> All The Action Types \r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error=null) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const reqLogOut = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Register User\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            registerUserWithEmail(user, dispatch);\r\n        } \r\n    }\r\n}\r\n\r\n// Register User With Email\r\nconst registerUserWithEmail = (data, dispatch) => {\r\n    // Creating A User With Email And Password\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(user => {\r\n        updateCurrentUserDetail(user, data, dispatch);\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Upadate Current User Detail\r\nconst updateCurrentUserDetail = (user, data, dispatch) => {\r\n    const { firstName, lastName, email } = data;\r\n    const currentUser = auth.currentUser;\r\n    currentUser.updateProfile({ firstName, lastName,})\r\n    .then( () => {\r\n        // Save To The Database\r\n        db.collection('users').doc(user.user.uid).set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            uid: user.user.uid,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            localStorage.setItem('userId', user.user.uid);\r\n            dispatch(fetchSuccess({firstName, lastName, email, uid: user.user.uid}));\r\n            dispatch(setAlert({type:'success', message: \"User Registerd Successfull\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Fetch Current User Detail\r\nexport const fetchCurrentUserDetail = () => {\r\n    return dispatch => {\r\n        // Check If user is signedin or not\r\n        auth.onAuthStateChanged( async(user) => {\r\n            if (user) {\r\n                const userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                const doc = await userRef.get();\r\n                if (!doc.exists) {\r\n                    dispatch(setAlert({type:'danger', message: \"Your Account Terminated, So Please Register With New Email..\"}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                    dispatch(fetchError(''));\r\n                } else {\r\n                    const {firstName, lastName, email, uid} = doc.data();\r\n                    dispatch(fetchSuccess({firstName, lastName, email, uid}));\r\n                }\r\n            } else {\r\n                dispatch(setAlert({type:'warning', message: \"You Logged Out Please Login\"}));\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n                dispatch(fetchError(''));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Sign In Action\r\nexport const signInUser = (data) => {\r\n    return async dispatch => {\r\n        if(data.email === '' || data.password < 6) {\r\n            dispatch(setAlert({type:'warning', message: \"Email is required!\\n Password Must be more than 6 letter\"}));\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            auth.signInWithEmailAndPassword(data.email, data.password)\r\n            .then((user) => {\r\n                db.collection('users').doc(user.user.uid).update({\r\n                    isActive: true\r\n                })\r\n                .then(() => {\r\n                    localStorage.setItem('userId', user.user.uid);\r\n                    dispatch(setAlert({type:'success', message: 'Sign In Successfully'}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n                .catch(error => {\r\n                    dispatch(setAlert({type:'danger', message: error.message}))\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logoutUser = (uid) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest());\r\n        db.collection('users').doc(uid)\r\n        .update({isActive: false})\r\n        .then(() => {\r\n            auth.signOut()\r\n            .then(() => {\r\n                dispatch(reqLogOut());\r\n                dispatch(setAlert({type:'success', message: \"Logout Successfully\"}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })   \r\n        })\r\n        .catch(error => {\r\n            dispatch(setAlert({type:'danger', message: error.message}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\nimport { logoutUser } from './../../Redux/User/UserActions';\r\n\r\n\r\n/**\r\n* @author   Dhaval Bheda\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n    const { user } = useSelector(state => state.User);\r\n    const dispatch = useDispatch();\r\n    const logout = () => {\r\n        dispatch(logoutUser(user.uid));\r\n    }  \r\n    return(   \r\n        <header className=\"header\">\r\n            <div style={{display: 'flex'}}>\r\n                <div className=\"logo\">\r\n                    Digital Jalebi\r\n                </div>\r\n            </div>\r\n            <div style={{margin:'20px 0px', color: '#fff', fontWeight: 'bold'}}>{\"I'm \" + user.firstName + \" \" + user.lastName}</div>\r\n            <ul className=\"menu\">\r\n                <li>\r\n                    <Link to=\"/signin\" onClick={logout}>LogOut</Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n }\r\n\r\nexport default Header","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllFriends, getConversation, saveMessage } from '../../Redux/Chat/ChatActions';\r\nimport Header from '../Header/Header'\r\nimport './style.css';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  let unsubsribe;\r\n\r\n  useEffect(() => {\r\n      unsubsribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => unsubsribe.then(f => f()).catch(error => console.log(error));\r\n  }, []);\r\n  \r\n  const selectFriend = (friend) => {\r\n    setStartChat(true);\r\n    setSelectedFriend(friend);    \r\n    dispatch(getConversation({\r\n      sender: user.uid,\r\n      receiver: friend.uid}));\r\n    }\r\n\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    dispatch(saveMessage(data));\r\n    dispatch(getConversation({sender: user.uid, receiver: selectedFriend.uid}));\r\n  }\r\n  return(\r\n        <Fragment>\r\n          <Header/>\r\n          <section className=\"container-body\">\r\n            <div className=\"listOfUsers\">\r\n              {friends.length > 0 && <LoadFriends selectFriend={selectFriend} friends={friends} />}\r\n            </div>\r\n            <div className=\"chatArea\">\r\n                <div className=\"chatHeader\"> \r\n                  {startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}\r\n                </div>\r\n                <div className=\"messageSections\">\r\n                    {\r\n                      startChat && \r\n                      conversation.map((item, key) => {\r\n                        return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n                        ? <div key={key} style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n                                <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message}</p>\r\n                              </div>\r\n                        : <Fragment key={key}></Fragment>\r\n                      })\r\n                    }\r\n                </div>\r\n                <div className=\"chatControls\">\r\n                  {\r\n                    startChat && <Fragment>\r\n                        <textarea\r\n                            placeholder = 'Enter Text...'\r\n                            value = {text}\r\n                            onChange = {e => setText(e.target.value)}></textarea>\r\n                      <button onClick={sendMessage}>Send</button>\r\n                    </Fragment>\r\n                  }\r\n                    \r\n                </div>\r\n              </div>\r\n          </section>\r\n        </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend}) => {\r\n  return friends.map((friend, index) => \r\n    <div key={index} className=\"displayName\" onClick = {() => selectFriend(friend)}>\r\n      <div className=\"displayPic\">\r\n          <img src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n          <span style={{fontWeight: 500}}>{friend.firstName + \" \" + friend.lastName}</span>\r\n          <span>{friend.isActive ? 'Active' : 'offline'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Chat;\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const { authenticated } = useSelector(state => state.User);\r\n\r\n    return <Fragment>\r\n        {!authenticated\r\n        ? (<Redirect to=\"/signin\" />)\r\n        : <Route exact {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} style={{zIndex: 1}} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\nexport default Alert","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from './../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignIn Component\r\n **/\r\n\r\nconst SignIn = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [email, setEmail] = useState('1dhavalbhedadb@gmail.com');\r\n    const [password, setPassword] = useState('123456');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signInUser({ email, password}));\r\n    }\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            id=\"staticEmail\" \r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />;\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputPassword\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                                <button className=\"btn btn-primary m-2\" onClick={e => onsubmit(e)}>Sign In</button>\r\n                                <NavLink to=\"/signup\" className=\"btn btn-primary m-2\">Sign Up</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signUpUser } from '../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignUp Component\r\n **/\r\n\r\nconst SignUp = () => {\r\n    const { userAlert } = useSelector(state => state.User);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n       dispatch(signUpUser({firstName, lastName, email, password}, confirmPassword));\r\n    }\r\n\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            {/* First Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">First Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => setFirstName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Last Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Last Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            value={lastName}\r\n                                            onChange={(e) => setLastName(e.target.value)}  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Email */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Confirm Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Confirm Password\"\r\n                                            value={confirmPassword}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                            <button className=\"btn btn-primary m-2\" onClick={(e) => onsubmit(e)}>Sign Up</button>\r\n                                <NavLink to=\"/signin\" className=\"btn btn-primary m-2\">I Have Account</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignUp","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\n\r\nimport { fetchCurrentUserDetail } from './Redux/User/UserActions';\r\n\r\n\r\n\r\nconst App = () =>  {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, SET_ALERT, REMOVE_ALERT } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    authenticated:false,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                authenticated: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                authenticated: false\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer;","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\n\r\nconst initialState = {\r\n    friends:[],\r\n    conversation: [],\r\n    loadding: false,\r\n    chatAlert: null\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case CHAT_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case CHAT_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: payload,\r\n                loadding: false,\r\n            }\r\n        case CHAT_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                friends:[],\r\n                loadding: false,\r\n            }\r\n        case REQUEST_CONVERSATION: \r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n                conversation: []\r\n            }\r\n        case SET_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversation: payload,\r\n                loadding: false\r\n            }\r\n        case CHAT_SET_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: payload\r\n            }\r\n        case CHAT_REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default ChatReducer;","import { combineReducers } from 'redux'\r\n\r\nimport UserReducer from './User/UserReducer'\r\nimport ChatReducer from './Chat/ChatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Chat: ChatReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}