{"version":3,"sources":["Redux/User/ActionType.js","config/firebaseConfig.js","Redux/User/UserActions.js","Components/Header/Header.js","Redux/Chat/ActionType.js","Redux/Chat/ChatActions.js","Components/ChatComponent/Chat.js","Components/Layout/PrivateRoute.js","Components/Layout/Alert.js","Components/SignInComponent/SignIn.js","Components/SignUpComponent/SignUp.js","App.js","Redux/User/UserReducer.js","Redux/Chat/ChatReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","SET_ALERT","REMOVE_ALERT","TAB_CHANGE","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","fetchRequest","type","payload","fetchSuccess","data","fetchError","error","setAlert","removeAlert","registerUserWithEmail","dispatch","createUserWithEmailAndPassword","email","password","then","user","updateCurrentUserDetail","catch","message","setTimeout","firstName","lastName","currentUser","updateProfile","collection","doc","uid","set","isActive","createdAt","Date","localStorage","setItem","logoutUser","update","signOut","Header","props","useSelector","state","User","useDispatch","className","style","display","margin","color","fontWeight","to","onClick","CHAT_FETCH_REQUEST","CHAT_FETCH_SUCCESS","CHAT_FETCH_ERROR","CHAT_SET_ALERT","CHAT_REMOVE_ALERT","REQUEST_CONVERSATION","SET_CONVERSATION","UPDATE_CONVERSATION","rdb","database","arrayUnion","FieldValue","arrayRemove","requestConversation","setConversation","updateConversation","saveMessage","a","uuid","sender","receiver","ref","child","push","isSeen","ServerValue","TIMESTAMP","pendding","LoadFriends","friends","selectFriend","selectedFriend","addClass","friend","includes","map","index","background","src","alt","flex","justifyContent","ChatComponent","conversation","sort","b","item","key","undefined","toLocaleString","day","month","toLocaleTimeString","timeStyle","textAlign","Chat","useState","startChat","setStartChat","setSelectedFriend","text","setText","emojiPickerClick","setEmojiPickerClick","useEffect","unsubscribe","onSnapshot","querySnapshot","forEach","unsubscribeMehod","console","log","off","length","on","snap","val","getConversation","height","class","placeholder","value","onChange","e","target","uuidv4","onEmojiClick","event","emoji","PrivateRoute","Component","path","rest","authenticated","exact","render","Alert","alert","zIndex","role","SignIn","userAlert","setEmail","setPassword","onsubmit","preventDefault","signInWithEmailAndPassword","htmlFor","id","SignUp","setFirstName","setLastName","confirmPassword","setConfirmPassword","signUpUser","window","addEventListener","App","onAuthStateChanged","userRef","get","exists","component","initialState","currentTab","loadding","UserReducer","action","chatAlert","ChatReducer","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","BrowserUnload","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.192796bf.chunk.js","sourcesContent":["export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const TAB_CHANGE = 'TAB_CHANGE'\r\n","\r\nimport firebase from 'firebase';\r\n\r\n// Configuration of Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB3mUGEeVTQn7hbmoxUNncowRjwD-5y2TI\",\r\n  authDomain: \"digital-jalebi-ac363.firebaseapp.com\",\r\n  databaseURL: \"https://digital-jalebi-ac363-default-rtdb.firebaseio.com\",\r\n  projectId: \"digital-jalebi-ac363\",\r\n  storageBucket: \"digital-jalebi-ac363.appspot.com\",\r\n  messagingSenderId: \"105427663157\",\r\n  appId: \"1:105427663157:web:3e564360c7852fb4abb47c\",\r\n  measurementId: \"G-M2DJG8HX1P\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, SET_ALERT, REMOVE_ALERT, USER_LOG_OUT, TAB_CHANGE } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db =firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\n// =====================> All The Action Types \r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error=null) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const reqLogOut = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\nexport const setTabChange = (data) => {\r\n    return {\r\n        type: TAB_CHANGE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Register User\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            registerUserWithEmail(user, dispatch);\r\n        } \r\n    }\r\n}\r\n\r\n// Register User With Email\r\nconst registerUserWithEmail = (data, dispatch) => {\r\n    // Creating A User With Email And Password\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(user => {\r\n        updateCurrentUserDetail(user, data, dispatch);\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Upadate Current User Detail\r\nconst updateCurrentUserDetail = (user, data, dispatch) => {\r\n    const { firstName, lastName, email } = data;\r\n    const currentUser = auth.currentUser;\r\n    currentUser.updateProfile({ firstName, lastName,})\r\n    .then( () => {\r\n        // Save To The Database\r\n        db.collection('users').doc(user.user.uid).set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            uid: user.user.uid,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            localStorage.setItem('userId', user.user.uid);\r\n            dispatch(fetchSuccess({firstName, lastName, email, uid: user.user.uid}));\r\n            dispatch(setAlert({type:'success', message: \"User Registerd Successfull\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Fetch Current User Detail\r\nexport const fetchCurrentUserDetail = () => {\r\n    return dispatch => {\r\n        // Check If user is signedin or not\r\n        auth.onAuthStateChanged( async(user) => {\r\n            if (user) {\r\n                const userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                const doc = await userRef.get();\r\n                if (!doc.exists) {\r\n                    dispatch(setAlert({type:'danger', message: \"Your Account Terminated, So Please Register With New Email..\"}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                    dispatch(fetchError(''));\r\n                } else {\r\n                    const {firstName, lastName, email, uid} = doc.data();\r\n                    dispatch(fetchSuccess({firstName, lastName, email, uid}));\r\n                }\r\n            } else {\r\n                dispatch(setAlert({type:'warning', message: \"You Logged Out Please Login\"}));\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n                dispatch(fetchError(''));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Sign In Action\r\nexport const signInUser = (data) => {\r\n    return async dispatch => {\r\n        if(data.email === '' || data.password < 6) {\r\n            dispatch(setAlert({type:'warning', message: \"Email is required!\\n Password Must be more than 6 letter\"}));\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            auth.signInWithEmailAndPassword(data.email, data.password)\r\n            .then((user) => {\r\n                db.collection('users').doc(user.user.uid).update({\r\n                    isActive: true\r\n                })\r\n                .then(() => {\r\n                    localStorage.setItem('userId', user.user.uid);\r\n                    dispatch(setAlert({type:'success', message: 'Sign In Successfully'}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n                .catch(error => {\r\n                    dispatch(setAlert({type:'danger', message: error.message}))\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logoutUser = (uid) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest());\r\n        db.collection('users').doc(uid)\r\n        .update({isActive: false})\r\n        .then(() => {\r\n            auth.signOut()\r\n            .then(() => {\r\n                dispatch(reqLogOut());\r\n                dispatch(setAlert({type:'success', message: \"Logout Successfully\"}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })   \r\n        })\r\n        .catch(error => {\r\n            dispatch(setAlert({type:'danger', message: error.message}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const userTabChange = (uid, friendId) => {\r\n  return async dispatch => db.collection('users').doc(uid)\r\n        .update({currentTab: friendId})\r\n        .then(() => {\r\n            dispatch(setTabChange(friendId));\r\n        })\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\nimport { logoutUser } from './../../Redux/User/UserActions';\r\n\r\n\r\n/**\r\n* @author   Dhaval Bheda\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n    const { user } = useSelector(state => state.User);\r\n    const dispatch = useDispatch();\r\n    const logout = () => {\r\n        dispatch(logoutUser(user.uid));\r\n    }  \r\n    return(   \r\n        <header className=\"header\">\r\n            <div style={{display: 'flex'}}>\r\n                <div className=\"logo\">\r\n                    Digital Jalebi\r\n                </div>\r\n            </div>\r\n            <div style={{margin:'20px 0px', color: '#fff', fontWeight: 'bold'}}>{\"I'm \" + user.firstName + \" \" + user.lastName}</div>\r\n            <ul className=\"menu\">\r\n                <li>\r\n                    <Link to=\"/signin\" onClick={logout}>LogOut</Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n }\r\n\r\nexport default Header","export const CHAT_FETCH_REQUEST = 'CHAT_FETCH_REQUEST';\r\nexport const CHAT_FETCH_SUCCESS = 'CHAT_FETCH_SUCCESS';\r\nexport const CHAT_FETCH_ERROR = 'CHAT_FETCH_ERROR';\r\nexport const CHAT_SET_ALERT = 'CHAT_SET_ALERT';\r\nexport const CHAT_REMOVE_ALERT = 'CHAT_REMOVE_ALERT';\r\nexport const REQUEST_CONVERSATION = 'REQUEST_CONVERSATION'; \r\nexport const SET_CONVERSATION = 'SET_CONVERSATION';\r\nexport const UPDATE_CONVERSATION = 'UPDATE_CONVERSATION';\r\n\r\n","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION, UPDATE_CONVERSATION } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\n\r\nconst db = firebase.firestore();\r\nconst rdb = firebase.database();\r\nconst arrayUnion = firebase.firestore.FieldValue.arrayUnion;\r\nconst arrayRemove = firebase.firestore.FieldValue.arrayRemove;\r\n\r\n// =========> All The Action Types \r\n// Chat Request\r\nexport const chatRequest = () => {\r\n    return {\r\n        type: CHAT_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\n// Chat Success\r\nexport const chatSuccess = (data) => {\r\n    return {\r\n        type: CHAT_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Chat Error\r\nexport const chatError = (error=null) => {\r\n    return {\r\n        type: CHAT_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const requestConversation = (data = null) => \r\n{\r\n    return {\r\n        type: REQUEST_CONVERSATION,\r\n        payload: data\r\n    }\r\n}\r\nexport const setConversation = (data = null) => {\r\n    return {\r\n        type: SET_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const updateConversation = (data = null) => {\r\n    return {\r\n        type: UPDATE_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\n// Set Alert\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: CHAT_SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Remove Alert\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: CHAT_REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Get All Message\r\nexport const getAllFriends = (uid) => {\r\n    return async dispatch => {\r\n        const unsubscribe = db.collection('users').onSnapshot((querySnapshot) => {\r\n            const friends = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid)\r\n                    friends.push(doc.data());\r\n            })\r\n            dispatch(chatSuccess(friends));\r\n        })\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\n// Send Message\r\nexport const saveMessage = async({uuid, sender, receiver, message}) => {\r\n    rdb.ref().child(sender + \"-\" + receiver).push().set({\r\n        uuid,\r\n        sender,\r\n        receiver,\r\n        message,\r\n        isSeen: false,\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP\r\n    })\r\n    db.collection('users').doc(sender).update({pendding: arrayUnion(receiver)});\r\n}\r\n\r\n// Get Conversation\r\nexport const getConversation = ({sender, receiver}) => {\r\n    return async dispatch => {\r\n        dispatch(requestConversation());\r\n        rdb.ref().child(sender + \"-\" + receiver).on('child_added', snap => {\r\n           dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(receiver + \"-\" + sender).on('child_added', snap => {\r\n            if(!snap.val().isSeen) {\r\n                rdb.ref().child(receiver + \"-\" + sender).child(snap.key).update({isSeen: true});\r\n                db.collection('users').doc(receiver).update({pendding: arrayRemove(sender)});\r\n            }\r\n            dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(sender + \"-\" + receiver).on('child_changed', snap => {\r\n            dispatch(updateConversation(snap.val()))\r\n        })\r\n    }  \r\n}\r\n\r\nexport const removeLister = (sender, receiver) => {\r\n    rdb.ref().child(sender + \"-\" + receiver).off('child_added');\r\n    rdb.ref().child(sender + \"-\" + receiver).off('child_changed');\r\n    rdb.ref().child(receiver + \"-\" + sender).off('child_added');\r\n}","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// User Define\r\nimport './../Utils/css/font-awesome.css';\r\nimport './style.css';\r\nimport Header from '../Header/Header';\r\nimport { getAllFriends, getConversation, removeLister, saveMessage } from '../../Redux/Chat/ChatActions';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const [emojiPickerClick, setEmojiPickerClick] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  let unsubscribe;\r\n  useEffect(() => {\r\n      unsubscribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => removeLister(user.uid, selectedFriend.uid);\r\n  }, [selectedFriend]);\r\n  \r\n\r\n  const selectFriend = (friend) => {\r\n    if(selectedFriend && selectedFriend.uid === friend.uid)\r\n      return;\r\n      console.log(friend.uid);\r\n    setStartChat(true);\r\n    setEmojiPickerClick(false);\r\n    setText('');\r\n    setSelectedFriend(friend);  \r\n    dispatch(getConversation({\r\n        sender: user.uid,\r\n        receiver: friend.uid}))\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      uuid: uuidv4(),\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    saveMessage(data);\r\n  }\r\n\r\n  const onEmojiClick = (event, {emoji}) => {\r\n    setText(text +  emoji);\r\n   console.log(emoji);\r\n  };\r\n  return(\r\n        <Fragment>\r\n          <Header/>\r\n          <section className=\"container-body\">\r\n            <div className=\"listOfUsers\">\r\n              {friends.length > 0 && <LoadFriends uid={user.uid} selectFriend={selectFriend} friends={friends} selectedFriend={selectedFriend} />}\r\n            </div>\r\n            <div className=\"chatArea\">\r\n                <div className=\"chatHeader\"> \r\n                  {startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}\r\n                </div>\r\n                <ScrollToBottom className={emojiPickerClick ? \"messageSections-collaps\" : \"messageSections\"}>\r\n                    {\r\n                      startChat && <ChatComponent conversation = {conversation} selectedFriend = {selectedFriend} user = {user}  />\r\n                    }\r\n                </ScrollToBottom>\r\n                <div className=\"chatControls\" style={emojiPickerClick ? {height:'45%'} :  {height:'5%'}}>\r\n                  {\r\n                    startChat && <Fragment>\r\n                      <div class=\"control\">\r\n                        <textarea\r\n                            placeholder = 'Enter Text...'\r\n                            value = {text}\r\n                            onChange = {e => setText(e.target.value)}></textarea>\r\n                            <span className=\"smile-icon\" onClick={e => setEmojiPickerClick(!emojiPickerClick)}><i class=\"far fa-smile\"></i></span>\r\n                            <span className=\"send-button-icon\" onClick={sendMessage}><i class=\"fas fa-paper-plane\"></i></span>\r\n                      </div>\r\n                      <div>\r\n                       { <Picker onEmojiClick={onEmojiClick} />}\r\n                      </div>\r\n                    </Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n          </section>\r\n        </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend, uid, selectedFriend}) => {\r\n  const addClass = (friend, uid) => {\r\n    if(friend.pendding) {\r\n      if(friend.pendding.includes(uid)) {\r\n        return 'displayPic pending'\r\n      } else {\r\n        return 'displayPic'\r\n      }\r\n    } else {\r\n      return 'displayPic'\r\n    }\r\n  }\r\n\r\n  return friends.map((friend, index) => \r\n    <div style={selectedFriend.uid === friend.uid ? {background: '#b1b1b1'} : {}} key={index} className=\"displayName\" onClick = {() => selectFriend(friend)}>\r\n      <div className={addClass(friend, uid)}>\r\n          <img src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n          <span style={{fontWeight: 500}}>{friend.firstName + \" \" + friend.lastName}</span>\r\n          <span>{friend.isActive ? 'Active' : 'offline'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ChatComponent = ({conversation, selectedFriend, user}) => {\r\n  \r\n  const sortCoversation = (data) => {\r\n    data.sort((a, b) => a.createdAt - b.createdAt);\r\n  }\r\n\r\n  sortCoversation(conversation)\r\n  return conversation.map((item, key) => {\r\n    let createdAt = undefined;\r\n    if(item.createdAt != null) {\r\n      let options = { day: 'numeric', month: 'short'};\r\n      createdAt = new Date(item.createdAt).toLocaleString('en', options);\r\n      createdAt += \" \" + new Date(item.createdAt).toLocaleTimeString([], {timeStyle: 'short'});\r\n    }\r\n    return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n    ? <div key={key} style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n            <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message}<br/>\r\n              <span className=\"message-time\">{ createdAt? createdAt : '' }</span>\r\n              {item.receiver !== user.uid && <span className=\"message-status\">{item.isSeen ? <i className=\"far fa-eye\"></i> : <i className=\"far fa-eye-slash\"></i>}</span>}\r\n            </p>\r\n      </div>\r\n    : <Fragment key={key}></Fragment>\r\n  })\r\n}\r\n\r\nexport default Chat;\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const { authenticated } = useSelector(state => state.User);\r\n\r\n    return <Fragment>\r\n        {!authenticated\r\n        ? (<Redirect to=\"/signin\" />)\r\n        : <Route exact {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} style={{zIndex: 1}} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\nexport default Alert","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from './../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignIn Component\r\n **/\r\n\r\nconst SignIn = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signInUser({ email, password}));\r\n    }\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            id=\"staticEmail\" \r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />;\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputPassword\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                                <button className=\"btn btn-primary m-2\" onClick={e => onsubmit(e)}>Sign In</button>\r\n                                <NavLink to=\"/signup\" className=\"btn btn-primary m-2\">Sign Up</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { signUpUser } from '../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignUp Component\r\n **/\r\n\r\nconst SignUp = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n       dispatch(signUpUser({firstName, lastName, email, password}, confirmPassword));\r\n    }\r\n\r\n    return  <div className=\"container\">\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            {/* First Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">First Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => setFirstName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Last Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Last Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            value={lastName}\r\n                                            onChange={(e) => setLastName(e.target.value)}  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Email */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Confirm Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Confirm Password\"\r\n                                            value={confirmPassword}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                            <button className=\"btn btn-primary m-2\" onClick={(e) => onsubmit(e)}>Sign Up</button>\r\n                                <NavLink to=\"/signin\" className=\"btn btn-primary m-2\">I Have Account</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignUp","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\nimport { fetchCurrentUserDetail } from './Redux/User/UserActions';\r\n\r\nwindow.addEventListener('focus', () => {\r\n  console.log('focus');\r\n})\r\n\r\nconst App = () =>  {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, SET_ALERT, REMOVE_ALERT, TAB_CHANGE } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    authenticated:false,\r\n    currentTab: null,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                authenticated: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                authenticated: false\r\n            }\r\n        case TAB_CHANGE:\r\n            return {\r\n                ...state,\r\n                currentTab: payload\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer;","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION, UPDATE_CONVERSATION } from './ActionType'\r\n\r\nconst initialState = {\r\n    friends:[],\r\n    conversation: [],\r\n    loadding: false,\r\n    chatAlert: null\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case CHAT_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case CHAT_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: payload,\r\n                loadding: false,\r\n            }\r\n        case CHAT_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                friends:[],\r\n                loadding: false,\r\n            }\r\n        case REQUEST_CONVERSATION: \r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n                conversation: []\r\n            }\r\n        case SET_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversation: [...state.conversation, payload],\r\n                loadding: false\r\n            }\r\n        case UPDATE_CONVERSATION:\r\n            let conversation = state.conversation.filter(item => item.uuid !== payload.uuid);\r\n            return {\r\n                ...state,\r\n                conversation: [...conversation, payload],\r\n                loadding: false\r\n            }\r\n        case CHAT_SET_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: payload\r\n            }\r\n        case CHAT_REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default ChatReducer;","import { combineReducers } from 'redux'\r\n\r\nimport UserReducer from './User/UserReducer'\r\nimport ChatReducer from './Chat/ChatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Chat: ChatReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nclass BrowserUnload extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", function confirmExit()\r\n      {\r\n        return \"show warning\";\r\n      } );\r\n }\r\n render() {\r\n   return <div></div>\r\n }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n      <App />\r\n      <BrowserUnload/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}