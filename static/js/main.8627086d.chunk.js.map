{"version":3,"sources":["Redux/Chat/ActionType.js","config/firebaseConfig.js","Redux/Chat/ChatActions.js","Redux/User/ActionType.js","Redux/User/UserActions.js","Components/Header/Header.js","Components/ChatComponent/Chat.js","Components/Layout/PrivateRoute.js","Components/Layout/Alert.js","Components/SignInComponent/SignIn.js","Components/SignUpComponent/SignUp.js","App.js","Redux/User/UserReducer.js","Redux/Chat/ChatReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["CHAT_FETCH_REQUEST","CHAT_FETCH_SUCCESS","CHAT_FETCH_ERROR","CHAT_SET_ALERT","CHAT_REMOVE_ALERT","SET_CONVERSATION","REQUEST_CONVERSATION","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","rdb","database","requestConversation","data","type","payload","setConversation","saveMessage","a","sender","receiver","message","ref","child","push","set","isSeen","createdAt","ServerValue","TIMESTAMP","USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","SET_ALERT","REMOVE_ALERT","TAB_CHANGE","auth","fetchRequest","fetchSuccess","fetchError","error","setAlert","removeAlert","registerUserWithEmail","dispatch","createUserWithEmailAndPassword","email","password","then","user","updateCurrentUserDetail","catch","setTimeout","firstName","lastName","currentUser","updateProfile","collection","doc","uid","isActive","Date","localStorage","setItem","logoutUser","update","signOut","Header","props","useSelector","state","User","useDispatch","className","style","display","margin","color","fontWeight","to","onClick","LoadFriends","friends","selectFriend","map","friend","index","src","alt","flex","justifyContent","ChatComponent","conversation","selectedFriend","sort","b","item","key","undefined","toLocaleString","day","month","toLocaleTimeString","timeStyle","textAlign","Chat","unsubsribe","useState","startChat","setStartChat","setSelectedFriend","text","setText","useEffect","unsubscribe","onSnapshot","querySnapshot","forEach","unsubscribeMehod","console","log","f","length","on","snap","val","getConversation","placeholder","value","onChange","e","target","PrivateRoute","Component","path","rest","authenticated","exact","render","Alert","alert","zIndex","role","SignIn","userAlert","setEmail","setPassword","onsubmit","preventDefault","signInWithEmailAndPassword","htmlFor","id","SignUp","setFirstName","setLastName","confirmPassword","setConfirmPassword","signUpUser","App","onAuthStateChanged","userRef","get","exists","component","initialState","currentTab","loadding","UserReducer","action","chatAlert","ChatReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","BrowserUnload","window","addEventListener","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8627086d.chunk.js","sourcesContent":["export const CHAT_FETCH_REQUEST = 'CHAT_FETCH_REQUEST';\r\nexport const CHAT_FETCH_SUCCESS = 'CHAT_FETCH_SUCCESS';\r\nexport const CHAT_FETCH_ERROR = 'CHAT_FETCH_ERROR';\r\nexport const CHAT_SET_ALERT = 'CHAT_SET_ALERT';\r\nexport const CHAT_REMOVE_ALERT = 'CHAT_REMOVE_ALERT';\r\nexport const SET_CONVERSATION = 'SET_CONVERSATION';\r\nexport const REQUEST_CONVERSATION = 'REQUEST_CONVERSATION'; \r\n\r\n","\r\nimport firebase from 'firebase';\r\n\r\n// Configuration of Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB3mUGEeVTQn7hbmoxUNncowRjwD-5y2TI\",\r\n  authDomain: \"digital-jalebi-ac363.firebaseapp.com\",\r\n  databaseURL: \"https://digital-jalebi-ac363-default-rtdb.firebaseio.com\",\r\n  projectId: \"digital-jalebi-ac363\",\r\n  storageBucket: \"digital-jalebi-ac363.appspot.com\",\r\n  messagingSenderId: \"105427663157\",\r\n  appId: \"1:105427663157:web:3e564360c7852fb4abb47c\",\r\n  measurementId: \"G-M2DJG8HX1P\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db = firebase.firestore();\r\nconst rdb = firebase.database();\r\n\r\n// =========> All The Action Types \r\n// Chat Request\r\nexport const chatRequest = () => {\r\n    return {\r\n        type: CHAT_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\n// Chat Success\r\nexport const chatSuccess = (data) => {\r\n    return {\r\n        type: CHAT_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Chat Error\r\nexport const chatError = (error=null) => {\r\n    return {\r\n        type: CHAT_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const requestConversation = (data = null) => \r\n{\r\n    return {\r\n        type: REQUEST_CONVERSATION,\r\n        payload: data\r\n    }\r\n}\r\nexport const setConversation = (data = null) => {\r\n    return {\r\n        type: SET_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\n// Set Alert\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: CHAT_SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Remove Alert\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: CHAT_REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Get All Message\r\nexport const getAllFriends = (uid) => {\r\n    return async dispatch => {\r\n        const unsubscribe = db.collection('users').onSnapshot((querySnapshot) => {\r\n            const friends = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid)\r\n                    friends.push(doc.data());\r\n            })\r\n            dispatch(chatSuccess(friends));\r\n\r\n        })\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\n// Send Message\r\nexport const saveMessage = async({sender, receiver, message}) => {\r\n    rdb.ref().child(sender + \"-\" + receiver).push().set({\r\n        sender,\r\n        receiver,\r\n        message,\r\n        isSeen: false,\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP\r\n    })\r\n}\r\n\r\n// Get Conversation\r\nexport const getConversation = ({sender, receiver}) => {\r\n    return async dispatch => {\r\n        dispatch(requestConversation());\r\n        rdb.ref().child(sender + \"-\" + receiver).on('child_added', snap => {\r\n            dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(receiver + \"-\" + sender).on('child_added', snap => {\r\n            if(!snap.val().isSeen)\r\n                rdb.ref().child(receiver + \"-\"+ sender).child(snap.key).update({isSeen: true});\r\n            dispatch(setConversation(snap.val()));\r\n        })\r\n        rdb.ref().child(receiver + \"-\" + sender).on('child_changed', snap => {\r\n            console.log(snap.val());\r\n        })\r\n    }   \r\n}","export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const TAB_CHANGE = 'TAB_CHANGE'\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, SET_ALERT, REMOVE_ALERT, USER_LOG_OUT, TAB_CHANGE } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db =firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\n// =====================> All The Action Types \r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error=null) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const reqLogOut = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\nexport const setTabChange = (data) => {\r\n    return {\r\n        type: TAB_CHANGE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Register User\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            registerUserWithEmail(user, dispatch);\r\n        } \r\n    }\r\n}\r\n\r\n// Register User With Email\r\nconst registerUserWithEmail = (data, dispatch) => {\r\n    // Creating A User With Email And Password\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(user => {\r\n        updateCurrentUserDetail(user, data, dispatch);\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Upadate Current User Detail\r\nconst updateCurrentUserDetail = (user, data, dispatch) => {\r\n    const { firstName, lastName, email } = data;\r\n    const currentUser = auth.currentUser;\r\n    currentUser.updateProfile({ firstName, lastName,})\r\n    .then( () => {\r\n        // Save To The Database\r\n        db.collection('users').doc(user.user.uid).set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            uid: user.user.uid,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            localStorage.setItem('userId', user.user.uid);\r\n            dispatch(fetchSuccess({firstName, lastName, email, uid: user.user.uid}));\r\n            dispatch(setAlert({type:'success', message: \"User Registerd Successfull\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Fetch Current User Detail\r\nexport const fetchCurrentUserDetail = () => {\r\n    return dispatch => {\r\n        // Check If user is signedin or not\r\n        auth.onAuthStateChanged( async(user) => {\r\n            if (user) {\r\n                const userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                const doc = await userRef.get();\r\n                if (!doc.exists) {\r\n                    dispatch(setAlert({type:'danger', message: \"Your Account Terminated, So Please Register With New Email..\"}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                    dispatch(fetchError(''));\r\n                } else {\r\n                    const {firstName, lastName, email, uid} = doc.data();\r\n                    dispatch(fetchSuccess({firstName, lastName, email, uid}));\r\n                }\r\n            } else {\r\n                dispatch(setAlert({type:'warning', message: \"You Logged Out Please Login\"}));\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n                dispatch(fetchError(''));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Sign In Action\r\nexport const signInUser = (data) => {\r\n    return async dispatch => {\r\n        if(data.email === '' || data.password < 6) {\r\n            dispatch(setAlert({type:'warning', message: \"Email is required!\\n Password Must be more than 6 letter\"}));\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            auth.signInWithEmailAndPassword(data.email, data.password)\r\n            .then((user) => {\r\n                db.collection('users').doc(user.user.uid).update({\r\n                    isActive: true\r\n                })\r\n                .then(() => {\r\n                    localStorage.setItem('userId', user.user.uid);\r\n                    dispatch(setAlert({type:'success', message: 'Sign In Successfully'}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n                .catch(error => {\r\n                    dispatch(setAlert({type:'danger', message: error.message}))\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logoutUser = (uid) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest());\r\n        db.collection('users').doc(uid)\r\n        .update({isActive: false})\r\n        .then(() => {\r\n            auth.signOut()\r\n            .then(() => {\r\n                dispatch(reqLogOut());\r\n                dispatch(setAlert({type:'success', message: \"Logout Successfully\"}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })   \r\n        })\r\n        .catch(error => {\r\n            dispatch(setAlert({type:'danger', message: error.message}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const userTabChange = (uid, friendId) => {\r\n  return async dispatch => db.collection('users').doc(uid)\r\n        .update({currentTab: friendId})\r\n        .then(() => {\r\n            dispatch(setTabChange(friendId));\r\n        })\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\nimport { logoutUser } from './../../Redux/User/UserActions';\r\n\r\n\r\n/**\r\n* @author   Dhaval Bheda\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n    const { user } = useSelector(state => state.User);\r\n    const dispatch = useDispatch();\r\n    const logout = () => {\r\n        dispatch(logoutUser(user.uid));\r\n    }  \r\n    return(   \r\n        <header className=\"header\">\r\n            <div style={{display: 'flex'}}>\r\n                <div className=\"logo\">\r\n                    Digital Jalebi\r\n                </div>\r\n            </div>\r\n            <div style={{margin:'20px 0px', color: '#fff', fontWeight: 'bold'}}>{\"I'm \" + user.firstName + \" \" + user.lastName}</div>\r\n            <ul className=\"menu\">\r\n                <li>\r\n                    <Link to=\"/signin\" onClick={logout}>LogOut</Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n }\r\n\r\nexport default Header","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllFriends, getConversation, saveMessage } from '../../Redux/Chat/ChatActions';\r\nimport Header from '../Header/Header'\r\nimport './style.css';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  let unsubsribe;\r\n  useEffect(() => {\r\n      unsubsribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => unsubsribe.then(f => f()).catch(error => console.log(error));\r\n  }, []);\r\n  \r\n  const selectFriend = (friend) => {\r\n    setStartChat(true);\r\n    \r\n    setSelectedFriend(friend);  \r\n    dispatch(getConversation({\r\n      sender: user.uid,\r\n      receiver: friend.uid}));\r\n    }\r\n\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    saveMessage(data);\r\n  }\r\n  return(\r\n        <Fragment>\r\n          <Header/>\r\n          <section className=\"container-body\">\r\n            <div className=\"listOfUsers\">\r\n              {friends.length > 0 && <LoadFriends selectFriend={selectFriend} friends={friends} />}\r\n            </div>\r\n            <div className=\"chatArea\">\r\n                <div className=\"chatHeader\"> \r\n                  {startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}\r\n                </div>\r\n                <ScrollToBottom className=\"messageSections\">\r\n                    {\r\n                      startChat && <ChatComponent conversation = {conversation} selectedFriend = {selectedFriend} user = {user}  />\r\n                    }\r\n                </ScrollToBottom>\r\n                <div className=\"chatControls\">\r\n                  {\r\n                    startChat && <Fragment>\r\n                        <textarea\r\n                            placeholder = 'Enter Text...'\r\n                            value = {text}\r\n                            onChange = {e => setText(e.target.value)}></textarea>\r\n                      <button onClick={sendMessage}>Send</button>\r\n                    </Fragment>\r\n                  }\r\n                    \r\n                </div>\r\n              </div>\r\n          </section>\r\n        </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend}) => {\r\n  return friends.map((friend, index) => \r\n    <div key={index} className=\"displayName\" onClick = {() => selectFriend(friend)}>\r\n      <div className=\"displayPic\">\r\n          <img src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n          <span style={{fontWeight: 500}}>{friend.firstName + \" \" + friend.lastName}</span>\r\n          <span>{friend.isActive ? 'Active' : 'offline'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ChatComponent = ({conversation, selectedFriend, user}) => {\r\n  \r\n  const sortCoversation = (data2) => {\r\n    let data = data2;\r\n    data.sort((a, b) => a.createdAt - b.createdAt);\r\n  }\r\n\r\n  sortCoversation(conversation)\r\n  return conversation.map((item, key) => {\r\n    let createdAt = undefined;\r\n    if(item.createdAt != null) {\r\n      let options = { day: 'numeric', month: 'short'};\r\n      createdAt = new Date(item.createdAt).toLocaleString('en', options);\r\n      createdAt += \" \" + new Date(item.createdAt).toLocaleTimeString([], {timeStyle: 'short'});\r\n    }\r\n    return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n    ? <div key={key} style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n            <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message}<br/>\r\n              <span className=\"message-time\">{createdAt? createdAt : ''}</span>\r\n              <span className=\"message-time\">{item.isSeen ? ' seen' : ' unseen'}</span>\r\n            </p>\r\n      </div>\r\n    : <Fragment key={key}></Fragment>\r\n  })\r\n}\r\n\r\n\r\nexport default Chat;","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const { authenticated } = useSelector(state => state.User);\r\n\r\n    return <Fragment>\r\n        {!authenticated\r\n        ? (<Redirect to=\"/signin\" />)\r\n        : <Route exact {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} style={{zIndex: 1}} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\nexport default Alert","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from './../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignIn Component\r\n **/\r\n\r\nconst SignIn = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signInUser({ email, password}));\r\n    }\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            id=\"staticEmail\" \r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />;\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputPassword\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                                <button className=\"btn btn-primary m-2\" onClick={e => onsubmit(e)}>Sign In</button>\r\n                                <NavLink to=\"/signup\" className=\"btn btn-primary m-2\">Sign Up</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signUpUser } from '../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignUp Component\r\n **/\r\n\r\nconst SignUp = () => {\r\n    const { userAlert } = useSelector(state => state.User);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n       dispatch(signUpUser({firstName, lastName, email, password}, confirmPassword));\r\n    }\r\n\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            {/* First Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">First Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => setFirstName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Last Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Last Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            value={lastName}\r\n                                            onChange={(e) => setLastName(e.target.value)}  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Email */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Confirm Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Confirm Password\"\r\n                                            value={confirmPassword}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                            <button className=\"btn btn-primary m-2\" onClick={(e) => onsubmit(e)}>Sign Up</button>\r\n                                <NavLink to=\"/signin\" className=\"btn btn-primary m-2\">I Have Account</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignUp","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\nimport { fetchCurrentUserDetail, userTabClose } from './Redux/User/UserActions';\r\n\r\n\r\n\r\nconst App = () =>  {\r\n  const { user } = useSelector(state => state.User);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, SET_ALERT, REMOVE_ALERT, TAB_CHANGE } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    authenticated:false,\r\n    currentTab: null,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                authenticated: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                authenticated: false\r\n            }\r\n        case TAB_CHANGE:\r\n            return {\r\n                ...state,\r\n                currentTab: payload\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer;","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\n\r\nconst initialState = {\r\n    friends:[],\r\n    conversation: [],\r\n    loadding: false,\r\n    chatAlert: null\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case CHAT_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case CHAT_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: payload,\r\n                loadding: false,\r\n            }\r\n        case CHAT_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                friends:[],\r\n                loadding: false,\r\n            }\r\n        case REQUEST_CONVERSATION: \r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n                conversation: []\r\n            }\r\n        case SET_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversation: [...state.conversation, payload],\r\n                loadding: false\r\n            }\r\n        case CHAT_SET_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: payload\r\n            }\r\n        case CHAT_REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default ChatReducer;","import { combineReducers } from 'redux'\r\n\r\nimport UserReducer from './User/UserReducer'\r\nimport ChatReducer from './Chat/ChatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Chat: ChatReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nclass BrowserUnload extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", function confirmExit()\r\n      {\r\n        return \"show warning\";\r\n      } );\r\n }\r\n render() {\r\n   return <div></div>\r\n }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n      <App />\r\n      <BrowserUnload/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}