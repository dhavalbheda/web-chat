{"version":3,"sources":["Redux/Chat/ActionType.js","config/firebaseConfig.js","Redux/Chat/ChatActions.js","Redux/User/ActionType.js","Redux/User/UserActions.js","Components/Header/Header.js","Components/ChatComponent/Chat.js","Components/Layout/PrivateRoute.js","Components/Layout/Alert.js","Components/SignInComponent/SignIn.js","Components/SignUpComponent/SignUp.js","App.js","Redux/User/UserReducer.js","Redux/Chat/ChatReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["CHAT_FETCH_REQUEST","CHAT_FETCH_SUCCESS","CHAT_FETCH_ERROR","CHAT_SET_ALERT","CHAT_REMOVE_ALERT","SET_CONVERSATION","REQUEST_CONVERSATION","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","requestConversation","data","type","payload","setConversation","getConversation","sender","receiver","dispatch","a","collection","orderBy","onSnapshot","querySnapshot","conversations","forEach","doc","console","log","window","push","USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","SET_ALERT","REMOVE_ALERT","TAB_CHANGE","auth","fetchRequest","fetchSuccess","fetchError","error","setAlert","removeAlert","registerUserWithEmail","createUserWithEmailAndPassword","email","password","then","user","updateCurrentUserDetail","catch","message","setTimeout","firstName","lastName","currentUser","updateProfile","uid","set","isActive","createdAt","Date","localStorage","setItem","logoutUser","update","signOut","Header","props","useSelector","state","User","useDispatch","className","style","display","margin","color","fontWeight","to","onClick","LoadFriends","friends","selectFriend","map","friend","index","src","alt","flex","justifyContent","Chat","unsubsribe","conversation","useState","startChat","setStartChat","selectedFriend","setSelectedFriend","text","setText","useEffect","unsubscribe","unsubscribeMehod","f","length","item","key","textAlign","toDate","placeholder","value","onChange","e","target","add","isSeen","FieldValue","serverTimestamp","saveMessage","PrivateRoute","Component","path","rest","authenticated","exact","render","Alert","alert","zIndex","role","SignIn","userAlert","setEmail","setPassword","onsubmit","preventDefault","signInWithEmailAndPassword","htmlFor","id","SignUp","setFirstName","setLastName","confirmPassword","setConfirmPassword","signUpUser","App","onAuthStateChanged","userRef","get","exists","component","initialState","currentTab","loadding","UserReducer","action","chatAlert","ChatReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","BrowserUnload","addEventListener","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e65b3bd.chunk.js","sourcesContent":["export const CHAT_FETCH_REQUEST = 'CHAT_FETCH_REQUEST';\r\nexport const CHAT_FETCH_SUCCESS = 'CHAT_FETCH_SUCCESS';\r\nexport const CHAT_FETCH_ERROR = 'CHAT_FETCH_ERROR';\r\nexport const CHAT_SET_ALERT = 'CHAT_SET_ALERT';\r\nexport const CHAT_REMOVE_ALERT = 'CHAT_REMOVE_ALERT';\r\nexport const SET_CONVERSATION = 'SET_CONVERSATION';\r\nexport const REQUEST_CONVERSATION = 'REQUEST_CONVERSATION'; \r\n\r\n","\r\nimport firebase from 'firebase';\r\n\r\n// Configuration of Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB3mUGEeVTQn7hbmoxUNncowRjwD-5y2TI\",\r\n  authDomain: \"digital-jalebi-ac363.firebaseapp.com\",\r\n  projectId: \"digital-jalebi-ac363\",\r\n  storageBucket: \"digital-jalebi-ac363.appspot.com\",\r\n  messagingSenderId: \"105427663157\",\r\n  appId: \"1:105427663157:web:3e564360c7852fb4abb47c\",\r\n  measurementId: \"G-M2DJG8HX1P\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db = firebase.firestore();\r\n\r\n// =========> All The Action Types \r\n// Chat Request\r\nexport const chatRequest = () => {\r\n    return {\r\n        type: CHAT_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\n// Chat Success\r\nexport const chatSuccess = (data) => {\r\n    return {\r\n        type: CHAT_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Chat Error\r\nexport const chatError = (error=null) => {\r\n    return {\r\n        type: CHAT_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const requestConversation = (data = null) => \r\n{\r\n    return {\r\n        type: REQUEST_CONVERSATION,\r\n        payload: data\r\n    }\r\n}\r\nexport const setConversation = (data = null) => {\r\n    return {\r\n        type: SET_CONVERSATION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\n// Set Alert\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: CHAT_SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// Remove Alert\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: CHAT_REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Get All Message\r\nexport const getAllFriends = (uid) => {\r\n    return async dispatch => {\r\n        const unsubscribe = db.collection('users').onSnapshot((querySnapshot) => {\r\n            const friends = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid)\r\n                    friends.push(doc.data());\r\n            })\r\n            dispatch(chatSuccess(friends));\r\n\r\n        })\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\n// Send Message\r\nexport const saveMessage = ({sender, receiver, message}) => {\r\n    return async dispatch => {\r\n        const conversion = db.collection('conversation');\r\n        conversion.add({\r\n            sender,\r\n            receiver,\r\n            message,\r\n            isSeen: false,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\n// Get Conversation\r\nexport const getConversation = ({sender, receiver}) => {\r\n    return async dispatch => {\r\n        dispatch(requestConversation());\r\n        await db.collection('conversation')\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot(querySnapshot => {\r\n            let conversations = [];\r\n            querySnapshot.forEach(doc => {\r\n                console.log(doc.data());\r\n                if((doc.data().sender === sender && doc.data().receiver === window.receiver) || (doc.data().sender === window.receiver && doc.data().receiver === sender))\r\n                {                    \r\n                    conversations.push(doc.data())\r\n                }\r\n            })\r\n            dispatch(setConversation(conversations));\r\n        })\r\n    }   \r\n}","export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const TAB_CHANGE = 'TAB_CHANGE'\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, SET_ALERT, REMOVE_ALERT, USER_LOG_OUT, TAB_CHANGE } from './ActionType'\r\nimport firebase from './../../config/firebaseConfig';\r\nconst db =firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\n// =====================> All The Action Types \r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error=null) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const reqLogOut = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\nexport const setTabChange = (data) => {\r\n    return {\r\n        type: TAB_CHANGE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n//=========================> All The Actions\r\n\r\n// Register User\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            registerUserWithEmail(user, dispatch);\r\n        } \r\n    }\r\n}\r\n\r\n// Register User With Email\r\nconst registerUserWithEmail = (data, dispatch) => {\r\n    // Creating A User With Email And Password\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(user => {\r\n        updateCurrentUserDetail(user, data, dispatch);\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Upadate Current User Detail\r\nconst updateCurrentUserDetail = (user, data, dispatch) => {\r\n    const { firstName, lastName, email } = data;\r\n    const currentUser = auth.currentUser;\r\n    currentUser.updateProfile({ firstName, lastName,})\r\n    .then( () => {\r\n        // Save To The Database\r\n        db.collection('users').doc(user.user.uid).set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            uid: user.user.uid,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            localStorage.setItem('userId', user.user.uid);\r\n            dispatch(fetchSuccess({firstName, lastName, email, uid: user.user.uid}));\r\n            dispatch(setAlert({type:'success', message: \"User Registerd Successfull\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch(setAlert({type:'danger', message: error.message}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    })\r\n}\r\n\r\n// Fetch Current User Detail\r\nexport const fetchCurrentUserDetail = () => {\r\n    return dispatch => {\r\n        // Check If user is signedin or not\r\n        auth.onAuthStateChanged( async(user) => {\r\n            if (user) {\r\n                const userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                const doc = await userRef.get();\r\n                if (!doc.exists) {\r\n                    dispatch(setAlert({type:'danger', message: \"Your Account Terminated, So Please Register With New Email..\"}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                    dispatch(fetchError(''));\r\n                } else {\r\n                    const {firstName, lastName, email, uid} = doc.data();\r\n                    dispatch(fetchSuccess({firstName, lastName, email, uid}));\r\n                }\r\n            } else {\r\n                dispatch(setAlert({type:'warning', message: \"You Logged Out Please Login\"}));\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n                dispatch(fetchError(''));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Sign In Action\r\nexport const signInUser = (data) => {\r\n    return async dispatch => {\r\n        if(data.email === '' || data.password < 6) {\r\n            dispatch(setAlert({type:'warning', message: \"Email is required!\\n Password Must be more than 6 letter\"}));\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest());\r\n            auth.signInWithEmailAndPassword(data.email, data.password)\r\n            .then((user) => {\r\n                db.collection('users').doc(user.user.uid).update({\r\n                    isActive: true\r\n                })\r\n                .then(() => {\r\n                    localStorage.setItem('userId', user.user.uid);\r\n                    dispatch(setAlert({type:'success', message: 'Sign In Successfully'}));\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n                .catch(error => {\r\n                    dispatch(setAlert({type:'danger', message: error.message}))\r\n                    setTimeout(() => dispatch(removeAlert()), 3000);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logoutUser = (uid) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest());\r\n        db.collection('users').doc(uid)\r\n        .update({isActive: false})\r\n        .then(() => {\r\n            auth.signOut()\r\n            .then(() => {\r\n                dispatch(reqLogOut());\r\n                dispatch(setAlert({type:'success', message: \"Logout Successfully\"}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAlert({type:'danger', message: error.message}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })   \r\n        })\r\n        .catch(error => {\r\n            dispatch(setAlert({type:'danger', message: error.message}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const userTabChange = (uid, friendId) => {\r\n  return async dispatch => db.collection('users').doc(uid)\r\n        .update({currentTab: friendId})\r\n        .then(() => {\r\n            dispatch(setTabChange(friendId));\r\n        })\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\nimport { logoutUser } from './../../Redux/User/UserActions';\r\n\r\n\r\n/**\r\n* @author   Dhaval Bheda\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n    const { user } = useSelector(state => state.User);\r\n    const dispatch = useDispatch();\r\n    const logout = () => {\r\n        dispatch(logoutUser(user.uid));\r\n    }  \r\n    return(   \r\n        <header className=\"header\">\r\n            <div style={{display: 'flex'}}>\r\n                <div className=\"logo\">\r\n                    Digital Jalebi\r\n                </div>\r\n            </div>\r\n            <div style={{margin:'20px 0px', color: '#fff', fontWeight: 'bold'}}>{\"I'm \" + user.firstName + \" \" + user.lastName}</div>\r\n            <ul className=\"menu\">\r\n                <li>\r\n                    <Link to=\"/signin\" onClick={logout}>LogOut</Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n }\r\n\r\nexport default Header","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllFriends, getConversation, saveMessage } from '../../Redux/Chat/ChatActions';\r\nimport Header from '../Header/Header'\r\nimport './style.css';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function Chat\r\n**/\r\n\r\nconst Chat = (props) => {\r\n  const { user } = useSelector(state => state.User);\r\n  const { conversation } = useSelector(state => state.Chat);\r\n  const { friends } = useSelector(state => state.Chat);\r\n  const [startChat, setStartChat] = useState(false);\r\n  const [selectedFriend, setSelectedFriend] = useState({});\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  let unsubsribe;\r\n  useEffect(() => {\r\n      unsubsribe = dispatch(getAllFriends(user.uid))\r\n      .then(unsubscribeMehod => unsubscribeMehod)\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => unsubsribe.then(f => f()).catch(error => console.log(error));\r\n  }, []);\r\n  \r\n  const selectFriend = (friend) => {\r\n    setStartChat(true);\r\n    \r\n    setSelectedFriend(friend);  \r\n    window.receiver = friend.uid;  \r\n    dispatch(getConversation({\r\n      sender: user.uid,\r\n      receiver: friend.uid}));\r\n    }\r\n\r\n  const sendMessage = () => {\r\n    setText('');\r\n    const data = {\r\n      sender: user.uid,\r\n      receiver: selectedFriend.uid,\r\n      message: text\r\n    }\r\n    window.receiver = selectedFriend.uid;\r\n    dispatch(saveMessage(data));\r\n    dispatch(getConversation({sender: user.uid, receiver: selectedFriend.uid}));\r\n  }\r\n  return(\r\n        <Fragment>\r\n          <Header/>\r\n          <section className=\"container-body\">\r\n            <div className=\"listOfUsers\">\r\n              {friends.length > 0 && <LoadFriends selectFriend={selectFriend} friends={friends} />}\r\n            </div>\r\n            <div className=\"chatArea\">\r\n                <div className=\"chatHeader\"> \r\n                  {startChat && selectedFriend.firstName + \" \" + selectedFriend.lastName}\r\n                </div>\r\n                <div className=\"messageSections\">\r\n                    {\r\n                      startChat && \r\n                      conversation.map((item, key) => {\r\n                        return (item.sender === selectedFriend.uid && item.receiver === user.uid) || (item.sender === user.uid && item.receiver === selectedFriend.uid)\r\n                        ? <div key={key} style={{ textAlign: item.sender === user.uid ? 'right' : 'left'}}>\r\n                                <p className={item.sender === user.uid ? 'messageStyle right-message' : 'messageStyle left-message'} >{item.message + \" - \" + item.createdAt.toDate()}</p>\r\n                              </div>\r\n                        : <Fragment key={key}></Fragment>\r\n                      })\r\n                    }\r\n                </div>\r\n                <div className=\"chatControls\">\r\n                  {\r\n                    startChat && <Fragment>\r\n                        <textarea\r\n                            placeholder = 'Enter Text...'\r\n                            value = {text}\r\n                            onChange = {e => setText(e.target.value)}></textarea>\r\n                      <button onClick={sendMessage}>Send</button>\r\n                    </Fragment>\r\n                  }\r\n                    \r\n                </div>\r\n              </div>\r\n          </section>\r\n        </Fragment>\r\n   )\r\n}\r\n\r\nconst LoadFriends = ({friends, selectFriend}) => {\r\n  return friends.map((friend, index) => \r\n    <div key={index} className=\"displayName\" onClick = {() => selectFriend(friend)}>\r\n      <div className=\"displayPic\">\r\n          <img src=\"https://i.pinimg.com/originals/86/63/78/866378ef5afbe8121b2bcd57aa4fb061.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n          <span style={{fontWeight: 500}}>{friend.firstName + \" \" + friend.lastName}</span>\r\n          <span>{friend.isActive ? 'Active' : 'offline'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Chat;\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const { authenticated } = useSelector(state => state.User);\r\n\r\n    return <Fragment>\r\n        {!authenticated\r\n        ? (<Redirect to=\"/signin\" />)\r\n        : <Route exact {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} style={{zIndex: 1}} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\nexport default Alert","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from './../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignIn Component\r\n **/\r\n\r\nconst SignIn = () => {\r\n    const { userAlert, authenticated } = useSelector(state => state.User);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signInUser({ email, password}));\r\n    }\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                {authenticated && <Redirect to=\"/\" />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            id=\"staticEmail\" \r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />;\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputPassword\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                                <button className=\"btn btn-primary m-2\" onClick={e => onsubmit(e)}>Sign In</button>\r\n                                <NavLink to=\"/signup\" className=\"btn btn-primary m-2\">Sign Up</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signUpUser } from '../../Redux/User/UserActions';\r\nimport Alert from '../Layout/Alert';\r\n\r\n/**\r\n* @author DhavalBheda\r\n* @function SignUp Component\r\n **/\r\n\r\nconst SignUp = () => {\r\n    const { userAlert } = useSelector(state => state.User);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n       dispatch(signUpUser({firstName, lastName, email, password}, confirmPassword));\r\n    }\r\n\r\n    return  <div className=\"container\">\r\n                {userAlert && <Alert alert={userAlert} />}\r\n                <div className=\"row justify-content-center justify-content-md-start\">\r\n                    <div className=\"col-10 col-md-4 login-form ml-md-5 align-self-center\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <img alt=\"signin\" src=\"https://media.giphy.com/media/kcZlnhiaB1p76tKS6S/giphy.gif\" />\r\n                            </div>\r\n                            {/* First Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">First Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => setFirstName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Last Name */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Last Name</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            value={lastName}\r\n                                            onChange={(e) => setLastName(e.target.value)}  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Email */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"staticEmail\" className=\"col col-form-label align-self-start ml-md-5\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Confirm Password */}\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"inputPassword\" className=\"col col-form-label ml-md-5\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center mb-4\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <input  type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Confirm Password\"\r\n                                            value={confirmPassword}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row justify-content-center\">\r\n                            <button className=\"btn btn-primary m-2\" onClick={(e) => onsubmit(e)}>Sign Up</button>\r\n                                <NavLink to=\"/signin\" className=\"btn btn-primary m-2\">I Have Account</NavLink>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}\r\n \r\nexport default SignUp","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Chat from './Components/ChatComponent/Chat';\r\nimport PrivateRoute from './Components/Layout/PrivateRoute';\r\nimport SignIn from './Components/SignInComponent/SignIn';\r\nimport SignUp from './Components/SignUpComponent/SignUp';\r\nimport { fetchCurrentUserDetail, userTabClose } from './Redux/User/UserActions';\r\n\r\n\r\n\r\nconst App = () =>  {\r\n  const { user } = useSelector(state => state.User);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUserDetail());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/signin\"  component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, SET_ALERT, REMOVE_ALERT, TAB_CHANGE } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    authenticated:false,\r\n    currentTab: null,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                authenticated: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                authenticated: false\r\n            }\r\n        case TAB_CHANGE:\r\n            return {\r\n                ...state,\r\n                currentTab: payload\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer;","import  { CHAT_FETCH_REQUEST, CHAT_FETCH_ERROR, CHAT_FETCH_SUCCESS, CHAT_SET_ALERT, CHAT_REMOVE_ALERT, REQUEST_CONVERSATION, SET_CONVERSATION } from './ActionType'\r\n\r\nconst initialState = {\r\n    friends:[],\r\n    conversation: [],\r\n    loadding: false,\r\n    chatAlert: null\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case CHAT_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case CHAT_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: payload,\r\n                loadding: false,\r\n            }\r\n        case CHAT_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                friends:[],\r\n                loadding: false,\r\n            }\r\n        case REQUEST_CONVERSATION: \r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n                conversation: []\r\n            }\r\n        case SET_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversation: payload,\r\n                loadding: false\r\n            }\r\n        case CHAT_SET_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: payload\r\n            }\r\n        case CHAT_REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                chatAlert: null\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default ChatReducer;","import { combineReducers } from 'redux'\r\n\r\nimport UserReducer from './User/UserReducer'\r\nimport ChatReducer from './Chat/ChatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Chat: ChatReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nclass BrowserUnload extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", function confirmExit()\r\n      {\r\n        return \"show warning\";\r\n      } );\r\n }\r\n render() {\r\n   return <div></div>\r\n }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n      <App />\r\n      <BrowserUnload/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}